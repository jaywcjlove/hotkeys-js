{"version":3,"file":"static/js/main.43e3025b.js","mappings":"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A,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,IAC7CD,GACH,mCACA,wCAEEE,GAAyB,IAAIl5B,IAAI,CACnC,uCACA,qCACA,SAEEm5B,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,IAClDD,GACH,mCACA,wCAGJ,SAASE,GAAUrsB,EAAUssB,GACzB,OAAOA,EAASnpC,MAAMob,GAAWyB,EAASyC,WAAWlE,IACzD,CC/EA,MAAMguB,GACS,YADTA,GAEe,wBAKfC,GAA2B,IAAIn0B,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,cACFrf,KAAK2U,GAAS,CAACA,EAAKpM,cAAeoM,MAC/B8+B,GAA2B,IAAIp0B,IAAI,CACrC,CAAC,gBAAiB,CAAEkG,OAAQ,QAASloB,KAAM,UAAW6Q,UAAWihB,GAAGqI,QACpE,CAAC,gBAAiB,CAAEjS,OAAQ,QAASloB,KAAM,UAAW6Q,UAAWihB,GAAGqI,QACpE,CAAC,aAAc,CAAEjS,OAAQ,QAASloB,KAAM,OAAQ6Q,UAAWihB,GAAGqI,QAC9D,CAAC,aAAc,CAAEjS,OAAQ,QAASloB,KAAM,OAAQ6Q,UAAWihB,GAAGqI,QAC9D,CAAC,aAAc,CAAEjS,OAAQ,QAASloB,KAAM,OAAQ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KtE,SAAW,IAGXsE,CACT,CAIN,CCtGiB89F,CAAK3iF,EAAAA,GAAM,qDCZrB,MAAM4iF,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UC1BA,SAASC,EAAUhvF,GACxB,MAAMoM,EACiB,kBAAdpM,EAAyBA,EAAU4G,WAAW,GAAK5G,EAE5D,OAAOoM,GAAQ,IAAMA,GAAQ,EAC/B,CCLO,SAAS6iF,EAAcjvF,GAC5B,MAAMoM,EACiB,kBAAdpM,EAAyBA,EAAU4G,WAAW,GAAK5G,EAE5D,OACGoM,GAAQ,IAAcA,GAAQ,KAC9BA,GAAQ,IAAcA,GAAQ,IAC9BA,GAAQ,IAAcA,GAAQ,EAEnC,CCNO,SAAS8iF,EAAiBlvF,GAC/B,OCJK,SAA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","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@uiw/github-corners/src/index.ts","../node_modules/@uiw/react-github-corners/esm/index.js","../node_modules/@uiw/react-shields/esm/common/Container.js","../node_modules/@uiw/react-shields/esm/common/Base.js","../node_modules/@uiw/react-shields/esm/github/Issues.js","../node_modules/@uiw/react-shields/esm/github/Size.js","../node_modules/@uiw/react-shields/esm/github/License.js","../node_modules/@uiw/react-shields/esm/github/Downloads.js","../node_modules/@uiw/react-shields/esm/github/Activity.js","../node_modules/@uiw/react-shields/esm/github/Version.js","../node_modules/@uiw/react-shields/esm/github/Analysis.js","../node_modules/@uiw/react-shields/esm/github/Social.js","../node_modules/@uiw/react-shields/esm/github/index.js","../node_modules/@uiw/react-shields/esm/coverages/Coverages.js","../node_modules/@uiw/react-shields/esm/coverages/Codacy.js","../node_modules/@uiw/react-shields/esm/coverages/index.js","../node_modules/@uiw/react-shields/esm/npm/Version.js","../node_modules/@uiw/react-shields/esm/npm/Size.js","../node_modules/@uiw/react-shields/esm/npm/Downloads.js","../node_modules/@uiw/react-shields/esm/npm/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/hast-util-to-string/lib/index.js","../node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../node_modules/css-selector-parser/dist/mjs/indexes.js","../node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js","../node_modules/css-selector-parser/dist/mjs/syntax-definitions.js","../node_modules/css-selector-parser/dist/mjs/utils.js","../node_modules/css-selector-parser/dist/mjs/parser.js","../node_modules/css-selector-parser/dist/mjs/ast.js","../node_modules/hast-util-select/lib/parse.js","../node_modules/direction/index.js","../node_modules/hast-util-select/lib/enter-state.js","../node_modules/hast-util-select/lib/attribute.js","../node_modules/hast-util-select/lib/class-name.js","../node_modules/hast-util-select/lib/id.js","../node_modules/hast-util-select/lib/name.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/bcp-47-match/index.js","../node_modules/hast-util-has-property/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","https://raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","https://raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","https://raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../node_modules/zwitch/index.js","../node_modules/hast-util-select/lib/pseudo.js","../node_modules/hast-util-select/lib/test.js","../node_modules/hast-util-select/lib/walk.js","../node_modules/hast-util-select/lib/index.js","../node_modules/rehype-rewrite/src/index.ts","../node_modules/rehype-attr/src/utils.ts","../node_modules/rehype-attr/src/index.ts","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/hast-util-from-parse5/node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hast-util-from-parse5/node_modules/hastscript/lib/create-h.js","../node_modules/hast-util-from-parse5/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hast-util-from-parse5/node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/parse5/dist/common/unicode.js","../node_modules/parse5/dist/common/error-codes.js","../node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/parse5/dist/common/token.js","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../node_modules/parse5/dist/common/html.js","../node_modules/parse5/dist/tokenizer/index.js","../node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/parse5/dist/tree-adapters/default.js","../node_modules/parse5/dist/common/doctype.js","../node_modules/parse5/dist/common/foreign-content.js","../node_modules/parse5/dist/parser/index.js","https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/parse5/dist/serializer/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/mdast-util-phrasing/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/longest-streak/index.js","../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/edit-map.js","../node_modules/micromark-extension-gfm-table/lib/infer.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/remark-gfm/lib/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-github-blockquote-alert/src/index.ts","../node_modules/@uiw/react-markdown-preview/esm/plugins/useCopied.js","../node_modules/@uiw/react-markdown-preview/esm/preview.js","../node_modules/@uiw/react-markdown-preview/esm/plugins/reservedMeta.js","../node_modules/@uiw/react-markdown-preview/esm/plugins/retrieveMeta.js","../node_modules/github-slugger/regex.js","../node_modules/github-slugger/index.js","../node_modules/hast-util-heading-rank/lib/index.js","../node_modules/rehype-slug/lib/index.js","../node_modules/hast-util-is-element/lib/index.js","../node_modules/rehype-autolink-headings/lib/index.js","../node_modules/rehype-ignore/src/index.ts","../node_modules/@uiw/react-markdown-preview/esm/nodes/octiconLink.js","../node_modules/@uiw/react-markdown-preview/esm/rehypePlugins.js","../node_modules/@uiw/react-markdown-preview/esm/index.js","../node_modules/@uiw/react-markdown-preview/esm/nodes/copy.js","../node_modules/@uiw/react-mac-keyboard/esm/index.js","webpack://hotkeys-js/./website/components/Footer.module.less?cff4","components/Footer.js","webpack://hotkeys-js/./website/styles/index.module.less?2aeb","../README.md","../dist/hotkeys.esm.js","App.js","index.js","../../src/main.js","../node_modules/@wcj/dark-mode/dist/dark-mode.min.js","../node_modules/boolbase/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/parse-numeric-range/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/style-to-object/src/index.ts","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/comma-separated-tokens/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/core.js","../node_modules/hastscript/lib/html.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-reference-invalid/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/space-separated-tokens/index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","// @ts-ignore\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'github-corners': GithubCorners;\n  }\n  namespace JSX {\n    interface IntrinsicElements {\n      'github-corners': Partial<GithubCorners> | {\n        style?: Partial<CSSStyleDeclaration> | React.CSSProperties;\n      };\n    }\n  }\n}\n\nconst GITHUB_CORNERS_TEMPLATE = document.createElement(\"template\");\nGITHUB_CORNERS_TEMPLATE.innerHTML = `\n<style>\n:host a:hover .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n@keyframes octocat-wave {\n  0%, 100% { transform: rotate(0); }\n  20%, 60% { transform: rotate(-25deg); }\n  40%, 80% { transform: rotate(10deg); }\n}\n@media (max-width:500px) {\n  :host a:hover .octo-arm { animation: none; }\n  :host .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n}\n:host svg {\n  z-index: 99;\n  position: fixed;\n  border: 0px;\n  top: 0px;\n}\n</style>\n<svg width=\"54\" height=\"54\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n  <a xlink:href=\"https://github.com/uiwjs/react-github-corners\" target=\"_blank\" rel=\"nofollow sponsored\" style=\"fill: rgb(21, 21, 19); color: rgb(255, 255, 255);\">\n    <g>\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\" style=\"transform-origin: 130px 106px;\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </g>\n  </a>\n</svg>\n`;\n\nexport class GithubCorners extends HTMLElement {\n  /** Sets the z-order of a positioned element and its descendants or flex items. */\n  'z-index'?: string;\n  height?: string | number;\n  width?: string | number;\n  href?: string;\n  color?: string;\n  fill?: string;\n  position?: string;\n  target?: string;\n  top?: string;\n  left?: string;\n  right?: string = '0';\n  bottom?: string;\n  transform?: string;\n  private shadow: ShadowRoot\n  static get observedAttributes(): string[] {\n    return ['style', 'z-index', 'target', 'height', 'width', 'href', 'color', 'fill', 'position', 'top', 'left', 'right', 'bottom', 'transform'];\n  }\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.appendChild(this.ownerDocument.importNode(GITHUB_CORNERS_TEMPLATE.content, true));\n    this.update()\n  }\n  private setAttr(name: string, value: string) {\n    const svg = this.shadow.querySelector('svg');\n    if (/(href)/.test(name.toLocaleLowerCase())) {\n      svg.lastElementChild.setAttribute('xlink:href', value);\n    } else if (/(color|fill)/.test(name.toLocaleLowerCase())) {\n      (svg.firstElementChild as HTMLAnchorElement).style[name as any] = value;\n    } else if (/(z-index|position|top|left|right|bottom|transform)/.test(name.toLocaleLowerCase())) {\n      svg.style[name as any] = value;\n    } else {\n      svg.setAttribute(name, value);\n    }\n  }\n  private update() {\n    ;[...this.getAttributeNames(), 'right'].forEach((name) => {\n      const value = this.getAttribute(name) || this[name as keyof GithubCorners] as any || '';\n      this.setAttr(name, value);\n    });\n  }\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.setAttr(name, newValue);\n    }\n  }\n}\n\ncustomElements.define('github-corners', GithubCorners);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"size\", \"fixed\", \"bottom\", \"zIndex\", \"className\", \"style\", \"bgColor\", \"color\", \"position\"];\nimport React from 'react';\nimport '@uiw/github-corners';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function githubCorners(props) {\n  var {\n      size = 80,\n      fixed = false,\n      bottom,\n      zIndex,\n      style,\n      bgColor = '#151513',\n      color = '#fff',\n      position = 'right'\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  var styl = position === 'left' ? {\n    left: 0,\n    right: 'initial',\n    transform: 'scale(-1, 1)'\n  } : {\n    right: 0,\n    left: 'initial',\n    transform: 'scale(1, 1)'\n  };\n  if (bottom) {\n    styl.bottom = 0;\n    styl.top = 'initial';\n    styl.transform = position === 'left' ? 'scale(-1, -1)' : 'scale(1, -1)';\n  } else {\n    styl.bottom = 'initial';\n    styl.top = 0;\n  }\n  return /*#__PURE__*/_jsx(\"github-corners\", _extends({\n    target: \"__blank\",\n    width: size,\n    height: size,\n    href: props.href,\n    position: fixed ? 'fixed' : 'absolute',\n    \"z-index\": zIndex,\n    style: style,\n    fill: bgColor,\n    color: color\n  }, styl, otherProps));\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nexport default function Container(props) {\n  return React.Children.toArray(props.children).map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) return null;\n    return /*#__PURE__*/React.cloneElement(child, _extends({}, props, child.props));\n  });\n}\nContainer.displayName = 'Container';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"href\", \"anchor\", \"imgSrc\", \"platform\", \"type\", \"user\", \"repo\", \"base\", \"children\"];\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Internal = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      href,\n      anchor = {},\n      imgSrc\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  if (href) {\n    return /*#__PURE__*/_jsx(\"a\", _extends({}, anchor, {\n      href: href,\n      children: /*#__PURE__*/_jsx(\"img\", _extends({\n        alt: \"\",\n        ref: ref,\n        src: imgSrc\n      }, other))\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"img\", _extends({\n    alt: \"\",\n    ref: ref,\n    src: imgSrc\n  }, other));\n});\nInternal.displayName = 'Internal';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"type\", \"platform\", \"base\", \"property\", \"user\", \"repo\", \"label\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Issues = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      type = 'issues',\n      platform = 'github',\n      base = 'https://img.shields.io',\n      property,\n      user,\n      repo,\n      label\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'github') return '';\n    if (type === 'issues' || /^issues-(raw|closed|closed-raw|pr|pr-raw|pr-closed|pr-closed-raw)/.test(type)) {\n      if (label && (type === 'issues' || /^issues-(raw|pr|pr-raw)/.test(type || ''))) {\n        return [base, platform, type, user, repo, label].join('/');\n      }\n      return [base, platform, type, user, repo].join('/');\n    }\n    if (type === 'issueKind') {\n      return [base, platform, type, 'detail', property, user, repo].join('/');\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nIssues.displayName = 'Issues';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"type\", \"platform\", \"base\", \"user\", \"repo\", \"path\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Size = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      type = 'languages',\n      platform = 'github',\n      base = 'https://img.shields.io',\n      user,\n      repo,\n      path\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'github') return '';\n    /**\n     * /github/languages/code-size/:user/:repo\n     */\n    if (type === 'languages') {\n      return [base, platform, type, 'code-size', user, repo].join('/');\n    }\n    /**\n     * /github/repo-size/:user/:repo\n     */\n    if (type === 'repo-size') {\n      return [base, platform, type, user, repo].join('/');\n    }\n    /**\n     * /github/size/:user/:repo/:path*\n     */\n    if (type === 'size' && path) {\n      return [base, platform, type, user, repo, path].join('/');\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nSize.displayName = 'Size';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"platform\", \"type\", \"base\", \"user\", \"repo\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var License = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      platform = 'github',\n      type = 'license',\n      base = 'https://img.shields.io',\n      user,\n      repo\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'github') return '';\n    return [base, platform, type, user, repo].join('/');\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nLicense.displayName = 'License';","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"platform\", \"type\", \"base\", \"user\", \"repo\", \"tag\", \"path\", \"total\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Downloads = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      platform = 'github',\n      type = 'downloads',\n      base = 'https://img.shields.io',\n      user,\n      repo,\n      tag,\n      path,\n      total = true\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'github' || !/^(downloads|downloads-pre)/.test(type || '')) return '';\n    var baseData = [base, platform, type, user, repo];\n    if (path && tag) {\n      return [...baseData, tag, path].join('/');\n    }\n    if (total && tag || type === 'downloads-pre' && tag && total) {\n      return [...baseData, tag, 'total'].join('/');\n    }\n    if (total) {\n      return [...baseData, 'total'].join('/');\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nDownloads.displayName = 'Downloads';\nexport default Downloads;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"platform\", \"base\", \"type\", \"user\", \"repo\", \"interval\", \"variant\", \"version\", \"branch\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Activity = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      platform = 'github',\n      base = 'https://img.shields.io',\n      type = 'commits-since',\n      user,\n      repo,\n      interval,\n      variant,\n      version,\n      branch\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'github') return '';\n    if (type === 'commits-since' && version && branch) {\n      return [base, platform, type, user, repo, version, branch].join('/');\n    }\n    if (type === 'commit-activity' && interval) {\n      return [base, platform, type, interval, user, repo].join('/');\n    }\n    if (type === 'variant' && variant) {\n      return [base, platform, type, variant, user, repo].join('/');\n    }\n    if (type === 'last-commit') {\n      return branch ? [base, platform, type, user, repo, branch].join('/') : [base, platform, type, user, repo].join('/');\n    }\n    if (type && /^release-(date|date-pre)/.test(type)) {\n      return [base, platform, type, user, repo].join('/');\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nActivity.displayName = 'Activity';\nexport default Activity;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"platform\", \"type\", \"base\", \"user\", \"repo\", \"branch\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      platform = 'github',\n      type = 'version-release',\n      base = 'https://img.shields.io',\n      user,\n      repo,\n      branch\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    var typePath = '';\n    switch (type) {\n      case 'version-release':\n        typePath = 'v/release';\n        break;\n      case 'version-tag':\n        typePath = 'v/tag';\n        break;\n      case 'package-json':\n        typePath = 'package-json/v';\n        break;\n      case 'manifest-json':\n        typePath = 'manifest-json/v';\n        break;\n      case 'go-mod':\n        typePath = 'go-mod/go-version';\n        break;\n      default:\n        break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    var baseData = [base, platform, typePath, user, repo];\n    if (/(go-mod|manifest-json|package-json)/.test(type || '') && branch) {\n      return [...baseData, branch].join('/');\n    }\n    return baseData.join('/');\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"platform\", \"type\", \"base\", \"user\", \"repo\", \"query\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Analysis = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      platform = 'github',\n      type = 'languages-count',\n      base = 'https://img.shields.io',\n      user,\n      repo,\n      query\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    var typePath = '';\n    switch (type) {\n      case 'languages-count':\n        typePath = 'languages/count';\n        break;\n      case 'languages-top':\n        typePath = 'languages/top';\n        break;\n      case 'search':\n        typePath = 'search';\n        break;\n      default:\n        break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    var baseData = [base, platform, typePath, user, repo];\n    if (query) {\n      return [...baseData, query].join('/');\n    }\n    return baseData.join('/');\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nAnalysis.displayName = 'Analysis';\nexport default Analysis;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"type\", \"platform\", \"base\", \"user\", \"repo\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Social = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      type = 'followers',\n      platform = 'github',\n      base = 'https://img.shields.io',\n      user,\n      repo\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'github') return '';\n    if (type === 'followers') return [base, platform, type, user].join('/');\n    return [base, platform, type, user, repo].join('/');\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nSocial.displayName = 'Social';\nexport default Social;","import _extends from \"@babel/runtime/helpers/extends\";\nimport Container from '../common/Container';\nimport { Issues } from './Issues';\nimport { Size } from './Size';\nimport { License } from './License';\nimport Downloads from './Downloads';\nimport Activity from './Activity';\nimport Version from './Version';\nimport Analysis from './Analysis';\nimport Social from './Social';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Github = props => /*#__PURE__*/_jsx(Container, _extends({}, props));\nGithub.Issues = Issues;\nGithub.Size = Size;\nGithub.Downloads = Downloads;\nGithub.License = License;\nGithub.Activity = Activity;\nGithub.Analysis = Analysis;\nGithub.Version = Version;\nGithub.Social = Social;\nGithub.displayName = 'Github';\nexport default Github;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"type\", \"platform\", \"base\", \"user\", \"repo\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Coverages = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      type = 'github',\n      platform = 'coveralls',\n      base = 'https://img.shields.io',\n      user,\n      repo\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'coveralls') return '';\n    return [base, platform, type, user, repo].join('/');\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nCoverages.displayName = 'Coverages';\nexport default Coverages;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"platform\", \"base\", \"projectId\", \"branch\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Codacy = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      platform = 'coveralls',\n      base = 'https://img.shields.io',\n      projectId,\n      branch\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'coveralls') return '';\n    if (branch) return [base, platform, projectId, branch].join('/');\n    return [base, 'codacy/coverage', projectId].join('/');\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nCodacy.displayName = 'Codacy';\nexport default Codacy;","import _extends from \"@babel/runtime/helpers/extends\";\nimport Container from '../common/Container';\nimport Coverages from './Coverages';\nimport Codacy from './Codacy';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Coverage = props => /*#__PURE__*/_jsx(Container, _extends({}, props));\nCoverage.Coverages = Coverages;\nCoverage.Codacy = Codacy;\nCoverage.displayName = 'Github';\nexport default Coverage;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"base\", \"platform\", \"type\", \"scope\", \"packageName\", \"dependency\", \"dependencyScope\", \"version\", \"registryUri\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\n\n/**\n * NPM Version\n *\n * `/npm/v/:packageName`\n * npm:  npm badge\n *\n * `/npm/v/:scope/:packageName`\n * npm (scoped): npm (scoped) badge\n *\n * `/npm/v/:packageName/:tag`\n * npm (tag):  npm (tag) badge\n *\n * `/npm/v/:packageName/:tag?registry_uri=https%3A%2F%2Fregistry.npmjs.com`\n * npm (custom registry):  npm (custom registry) badge\n *\n * `/npm/v/:scope/:packageName/:tag`\n * npm (scoped with tag):  npm (scoped with tag) badge\n *\n * `/npm/dependency-version/:packageName/peer/:dependency`\n * npm peer dependency version:  npm peer dependency version badge\n *\n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm peer dependency version (scoped): npm peer dependency version (scoped) badge\n *\n * `/npm/dependency-version/:packageName/dev/:dependency`\n * npm dev dependency version: npm dev dependency version badge\n *\n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm dev dependency version (scoped):  npm dev dependency version (scoped) badge\n *\n * `/npm/dependency-version/:packageName/:dependency`\n * npm (prod) dependency version:  npm (prod) dependency version badge\n *\n * `/npm/dependency-version/:scope?/:packageName/:dependencyScope?/:dependency`\n * npm (prod) dependency version (scoped): npm (prod) dependency version (scoped) badge\n *\n * `/npm/types/:packageName`\n * npm type definitions: npm type definitions badge\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Version = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      base = 'https://img.shields.io',\n      platform = 'npm',\n      type = 'version',\n      scope,\n      packageName,\n      dependency,\n      dependencyScope,\n      version,\n      registryUri\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'npm' || !packageName) return '';\n    var url = '';\n    var baseData = [base, platform];\n    if (type === 'version' && packageName) {\n      baseData.push('v');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.push(packageName);\n      if (version) {\n        baseData.push(version);\n      }\n      url = baseData.join('/');\n      if (registryUri) {\n        url = url + \"?registry_uri=\" + registryUri;\n      }\n    } else if (type === 'peer-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      url = [...baseData, packageName, 'peer', dependency].join('/');\n    } else if (type === 'dev-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.concat([packageName, 'dev']);\n      if (dependencyScope) {\n        baseData.push(dependencyScope);\n      }\n      baseData.push(dependency);\n      url = baseData.join('/');\n    } else if (packageName && dependency) {\n      baseData.concat([packageName, dependency]);\n      url = baseData.join('/');\n    }\n    return url;\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nVersion.displayName = 'Version';\nexport default Version;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"base\", \"platform\", \"format\", \"packageName\", \"scope\", \"version\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Npm Size\n *\n * `/bundlephobia/:format/:packageName`\n * npm bundle size:  npm bundle size badge\n *\n * `/bundlephobia/:format/:scope/:packageName`\n * npm bundle size (scoped): npm bundle size (scoped) badge\n *\n * `/bundlephobia/:format/:packageName/:version`\n * npm bundle size (version):  npm bundle size (version) badge\n *\n * `/bundlephobia/:format/:scope/:packageName/:version`\n * npm bundle size (scoped version): npm bundle size (scoped version) badge\n *\n */\nvar Size = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      base = 'https://img.shields.io',\n      platform = 'npm',\n      format = 'min',\n      packageName,\n      scope,\n      version\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'npm') return '';\n    var baseData = [base, 'bundlephobia'];\n    var url = '';\n    if (packageName && format) {\n      url = [...baseData, format, packageName].join('/');\n    }\n    if (packageName && format && scope) {\n      url = [...baseData, format, scope, packageName].join('/');\n    }\n    if (packageName && format && scope && version) {\n      url = [...baseData, format, scope, packageName, version].join('/');\n    }\n    if (packageName && format && version) {\n      url = [...baseData, format, packageName, version].join('/');\n    }\n    return url;\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nSize.displayName = 'Size';\nexport default Size;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"base\", \"platform\", \"interval\", \"packageName\", \"scope\"];\nimport React from 'react';\nimport { Internal } from '../common/Base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Npm Downloads\n *\n * `/npm/:interval/:packageName`\n * npm downloads: npm downloads per interval badge\n *\n * `/npm/:interval/:scope/:packageName`\n * npm downloads (scoped): npm downloads per interval (scoped version) badge\n *\n */\nvar Downloads = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      base = 'https://img.shields.io',\n      platform = 'npm',\n      interval = 'dm',\n      packageName,\n      scope\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var getUrl = () => {\n    if (platform !== 'npm' || !packageName) return '';\n    var url = [base, 'npm', interval];\n    if (scope) {\n      url.push(scope);\n    }\n    url.push(packageName);\n    return url.join('/');\n  };\n  return /*#__PURE__*/_jsx(Internal, _extends({\n    imgSrc: getUrl(),\n    ref: ref\n  }, other));\n});\nDownloads.displayName = 'Downloads';\nexport default Downloads;","import _extends from \"@babel/runtime/helpers/extends\";\nimport Container from '../common/Container';\nimport Version from './Version';\nimport Size from './Size';\nimport Downloads from './Downloads';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Npm = props => /*#__PURE__*/_jsx(Container, _extends({}, props));\nNpm.Version = Version;\nNpm.Size = Size;\nNpm.Downloads = Downloads;\nNpm.displayName = 'Npm';\nexport default Npm;","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out (default: `true`).\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @template {Node} Tree\n * @template {Test} Check\n *\n * @overload\n * @param {Tree} tree\n * @param {Options | null | undefined} options\n * @param {Check} test\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} test\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\n *\n * @overload\n * @param {Tree} tree\n * @param {null | undefined} [options]\n * @returns {Tree}\n *\n * @param {Node} tree\n *   Tree to filter.\n * @param {Options | Test} [options]\n *   Configuration (optional).\n * @param {Test} [test]\n *   `unist-util-is` compatible test.\n * @returns {Node | undefined}\n *   New filtered tree.\n *\n *   `undefined` is returned if `tree` itself didn’t pass the test, or is\n *   cascaded away.\n */\nexport function filter(tree, options, test) {\n  const is = convert(test || options)\n  const cascadeRaw =\n    options && typeof options === 'object' && 'cascade' in options\n      ? /** @type {boolean | null | undefined} */ (options.cascade)\n      : undefined\n  const cascade =\n    cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n  return preorder(tree)\n\n  /**\n   * @param {Node} node\n   *   Current node.\n   * @param {number | undefined} [index]\n   *   Index of `node` in `parent`.\n   * @param {Parent | undefined} [parentNode]\n   *   Parent node.\n   * @returns {Node | undefined}\n   *   Shallow copy of `node`.\n   */\n  function preorder(node, index, parentNode) {\n    /** @type {Array<Node>} */\n    const children = []\n\n    if (!is(node, index, parentNode)) return undefined\n\n    if (parent(node)) {\n      let childIndex = -1\n\n      while (++childIndex < node.children.length) {\n        const result = preorder(node.children[childIndex], childIndex, node)\n\n        if (result) {\n          children.push(result)\n        }\n      }\n\n      if (cascade && node.children.length > 0 && children.length === 0) {\n        return undefined\n      }\n    }\n\n    // Create a shallow clone, using the new children.\n    /** @type {typeof node} */\n    // @ts-expect-error all the fields will be copied over.\n    const next = {}\n    /** @type {string} */\n    let key\n\n    for (key in node) {\n      if (own.call(node, key)) {\n        // @ts-expect-error: Looks like a record.\n        next[key] = key === 'children' ? children : node[key]\n      }\n    }\n\n    return next\n  }\n}\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nfunction parent(node) {\n  return 'children' in node && node.children !== undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n * @property {string} [defaultLanguage]\n *   Uses the specified language as the default if none is specified. Takes precedence over `ignoreMissing`.\n *   Note: The language must be registered with refractor.\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * @param {import('refractor/lib/core').Refractor} refractor\n * @param {string} defaultLanguage\n * @return {void}\n */\nconst checkIfLanguageIsRegistered = (refractor, defaultLanguage) => {\n  if (defaultLanguage && !refractor.registered(defaultLanguage)) {\n    throw new Error(`The default language \"${defaultLanguage}\" is not registered with refractor.`)\n  }\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    checkIfLanguageIsRegistered(refractor, options.defaultLanguage)\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      // @ts-ignore meta is a custom code block property\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n\n      let lang = getLanguage(node)\n      // If no language is set on the code block, use defaultLanguage if specified\n      if (!lang && options.defaultLanguage) {\n        lang = options.defaultLanguage\n        node.properties.className.push(`language-${lang}`)\n      }\n      node.properties.className.push('code-highlight')\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')) {\n            rootLang = lang.split('-')[1]\n          } else {\n            rootLang = lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '-'\n        ) {\n          line.properties.className.push('deleted')\n        } else if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '+'\n        ) {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","export var emptyMulticharIndex = {};\nexport var emptyRegularIndex = {};\nfunction extendIndex(item, index) {\n    var currentIndex = index;\n    for (var pos = 0; pos < item.length; pos++) {\n        var isLast = pos === item.length - 1;\n        var char = item.charAt(pos);\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\n        if (isLast) {\n            charIndex.self = item;\n        }\n        currentIndex = charIndex.chars;\n    }\n}\nexport function createMulticharIndex(items) {\n    if (items.length === 0) {\n        return emptyMulticharIndex;\n    }\n    var index = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        extendIndex(item, index);\n    }\n    return index;\n}\nexport function createRegularIndex(items) {\n    if (items.length === 0) {\n        return emptyRegularIndex;\n    }\n    var result = {};\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n        var item = items_2[_i];\n        result[item] = true;\n    }\n    return result;\n}\n","export var emptyPseudoSignatures = {};\nexport var defaultPseudoSignature = {\n    type: 'String',\n    optional: true\n};\nfunction calculatePseudoSignature(types) {\n    var result = {\n        type: 'NoArgument',\n        optional: false\n    };\n    function setResultType(type) {\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\n        }\n        result.type = type;\n    }\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        if (type === 'NoArgument') {\n            result.optional = true;\n        }\n        if (type === 'Formula') {\n            setResultType('Formula');\n        }\n        if (type === 'FormulaOfSelector') {\n            setResultType('Formula');\n            result.ofSelector = true;\n        }\n        if (type === 'String') {\n            setResultType('String');\n        }\n        if (type === 'Selector') {\n            setResultType('Selector');\n        }\n    }\n    return result;\n}\nexport function inverseCategories(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var category = _a[_i];\n        var items = obj[category];\n        if (items) {\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\n                var item = _c[_b];\n                (result[item] || (result[item] = [])).push(category);\n            }\n        }\n    }\n    return result;\n}\nexport function calculatePseudoSignatures(definitions) {\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\n    var result = {};\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\n        var pseudoClass = _a[_i];\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\n        if (argumentTypes) {\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\n        }\n    }\n    return result;\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar emptyXmlOptions = {};\nvar defaultXmlOptions = { wildcard: true };\nexport function getXmlOptions(param) {\n    if (param) {\n        if (typeof param === 'boolean') {\n            return defaultXmlOptions;\n        }\n        else {\n            return param;\n        }\n    }\n    else {\n        return emptyXmlOptions;\n    }\n}\nfunction withMigration(migration, merge) {\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\n}\nfunction withNoNegative(merge) {\n    return function (base, extension) {\n        var result = merge(base, extension);\n        if (!result) {\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\n        }\n        return result;\n    };\n}\nfunction withPositive(positive, merge) {\n    return function (base, extension) {\n        if (extension === true) {\n            return positive;\n        }\n        return merge(base === true ? positive : base, extension);\n    };\n}\nfunction mergeSection(values) {\n    return function (base, extension) {\n        if (!extension || !base) {\n            return extension;\n        }\n        if (typeof extension !== 'object' || extension === null) {\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\n        }\n        var result = __assign({}, base);\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            var mergeSchema = values[key];\n            result[key] = mergeSchema(base[key], value);\n        }\n        return result;\n    };\n}\nfunction replaceValueIfSpecified(base, extension) {\n    if (extension !== undefined) {\n        return extension;\n    }\n    return base;\n}\nfunction concatArray(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    return base.concat(extension);\n}\nfunction mergeDefinitions(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    var result = __assign({}, base);\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        if (!value) {\n            delete result[key];\n            continue;\n        }\n        var baseValue = base[key];\n        if (!baseValue) {\n            result[key] = value;\n            continue;\n        }\n        result[key] = baseValue.concat(value);\n    }\n    return result;\n}\nexport var extendSyntaxDefinition = withNoNegative(mergeSection({\n    baseSyntax: replaceValueIfSpecified,\n    tag: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    ids: replaceValueIfSpecified,\n    classNames: replaceValueIfSpecified,\n    namespace: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    combinators: concatArray,\n    attributes: mergeSection({\n        operators: concatArray,\n        caseSensitivityModifiers: concatArray,\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\n    }),\n    pseudoClasses: mergeSection({\n        unknown: replaceValueIfSpecified,\n        definitions: mergeDefinitions\n    }),\n    pseudoElements: mergeSection({\n        unknown: replaceValueIfSpecified,\n        notation: replaceValueIfSpecified,\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\n    })\n}));\nvar css1SyntaxDefinition = {\n    tag: {},\n    ids: true,\n    classNames: true,\n    combinators: [],\n    pseudoElements: {\n        unknown: 'reject',\n        notation: 'singleColon',\n        definitions: ['first-letter', 'first-line']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['link', 'visited', 'active']\n        }\n    }\n};\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\n    tag: { wildcard: true },\n    combinators: ['>', '+'],\n    attributes: {\n        unknownCaseSensitivityModifiers: 'reject',\n        operators: ['=', '~=', '|=']\n    },\n    pseudoElements: {\n        definitions: ['before', 'after']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['hover', 'focus', 'first-child'],\n            String: ['lang']\n        }\n    }\n});\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\n    namespace: {\n        wildcard: true\n    },\n    combinators: ['~'],\n    attributes: {\n        operators: ['^=', '$=', '*=']\n    },\n    pseudoElements: {\n        notation: 'both'\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'root',\n                'last-child',\n                'first-of-type',\n                'last-of-type',\n                'only-child',\n                'only-of-type',\n                'empty',\n                'target',\n                'enabled',\n                'disabled',\n                'checked',\n                'indeterminate'\n            ],\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\n            Selector: ['not']\n        }\n    }\n});\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\n    combinators: ['||'],\n    attributes: {\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'any-link',\n                'local-link',\n                'target-within',\n                'scope',\n                'current',\n                'past',\n                'future',\n                'focus-within',\n                'focus-visible',\n                'read-write',\n                'read-only',\n                'placeholder-shown',\n                'default',\n                'valid',\n                'invalid',\n                'in-range',\n                'out-of-range',\n                'required',\n                'optional',\n                'blank',\n                'user-invalid'\n            ],\n            Formula: ['nth-col', 'nth-last-col'],\n            String: ['dir'],\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\n            Selector: ['current', 'is', 'where', 'has']\n        }\n    }\n});\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(selectors4SyntaxDefinition, {\n    pseudoElements: {\n        unknown: 'accept'\n    },\n    pseudoClasses: {\n        unknown: 'accept'\n    },\n    attributes: {\n        unknownCaseSensitivityModifiers: 'accept'\n    }\n});\nexport var cssSyntaxDefinitions = {\n    css1: css1SyntaxDefinition,\n    css2: css2SyntaxDefinition,\n    css3: selectors3SyntaxDefinition,\n    'selectors-3': selectors3SyntaxDefinition,\n    'selectors-4': selectors4SyntaxDefinition,\n    latest: selectors4SyntaxDefinition,\n    progressive: progressiveSyntaxDefinition\n};\n","export function isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\' || c >= '\\u00a0';\n}\nexport function isIdent(c) {\n    return ((c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        c === '-' ||\n        c === '_' ||\n        c >= '\\u00a0');\n}\nexport function isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexport var identEscapeChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    $: true,\n    '%': true,\n    '&': true,\n    \"'\": true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexport var stringRenderEscapeChars = {\n    '\\n': true,\n    '\\r': true,\n    '\\t': true,\n    '\\f': true,\n    '\\v': true\n};\nexport var whitespaceChars = {\n    ' ': true,\n    '\\t': true,\n    '\\n': true,\n    '\\r': true,\n    '\\f': true\n};\nexport var quoteChars = {\n    '\"': true,\n    \"'\": true\n};\nexport var digitsChars = {\n    0: true,\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n    7: true,\n    8: true,\n    9: true\n};\nexport var maxHexLength = 6;\nexport function escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (identEscapeChars[chr] || (chr === '-' && i === 1 && s.charAt(0) === '-')) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (chr === '-' ||\n                chr === '_' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (chr >= '0' && chr <= '9' && i !== 0 && !(i === 1 && s.charAt(0) === '-'))) {\n                result += chr;\n            }\n            else {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xf800) === 0xd800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n        }\n        i++;\n    }\n    return result.trim();\n}\nexport function escapeString(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if (stringRenderEscapeChars[chr]) {\n            chr = '\\\\' + chr.charCodeAt(0).toString(16) + (i === len - 1 ? '' : ' ');\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\".concat(result, \"\\\"\");\n}\n","import { createMulticharIndex, createRegularIndex, emptyMulticharIndex, emptyRegularIndex } from './indexes.js';\nimport { calculatePseudoSignatures, defaultPseudoSignature, emptyPseudoSignatures } from './pseudo-signatures.js';\nimport { cssSyntaxDefinitions, extendSyntaxDefinition, getXmlOptions } from './syntax-definitions.js';\nimport { digitsChars, isHex, isIdent, isIdentStart, maxHexLength, quoteChars, whitespaceChars } from './utils.js';\nvar errorPrefix = \"css-selector-parser parse error: \";\n/**\n * Creates a parse function to be used later to parse CSS selectors.\n */\nexport function createParser(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b;\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : cssSyntaxDefinitions[syntax];\n    if (syntaxDefinition.baseSyntax) {\n        syntaxDefinition = extendSyntaxDefinition(cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\n    }\n    var _c = syntaxDefinition.tag\n        ? [true, Boolean(getXmlOptions(syntaxDefinition.tag).wildcard)]\n        : [false, false], tagNameEnabled = _c[0], tagNameWildcardEnabled = _c[1];\n    var idEnabled = Boolean(syntaxDefinition.ids);\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\n    if (namespaceEnabled && !tagNameEnabled) {\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\n    }\n    var substitutesEnabled = Boolean(substitutes);\n    var combinatorsIndex = syntaxDefinition.combinators\n        ? createMulticharIndex(syntaxDefinition.combinators)\n        : emptyMulticharIndex;\n    var _d = syntaxDefinition.attributes\n        ? [\n            true,\n            syntaxDefinition.attributes.operators\n                ? createMulticharIndex(syntaxDefinition.attributes.operators)\n                : emptyMulticharIndex,\n            syntaxDefinition.attributes.caseSensitivityModifiers\n                ? createRegularIndex(syntaxDefinition.attributes.caseSensitivityModifiers)\n                : emptyRegularIndex,\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\n        ]\n        : [false, emptyMulticharIndex, emptyRegularIndex, false], attributesEnabled = _d[0], attributesOperatorsIndex = _d[1], attributesCaseSensitivityModifiers = _d[2], attributesAcceptUnknownCaseSensitivityModifiers = _d[3];\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\n    var _e = syntaxDefinition.pseudoClasses\n        ? [\n            true,\n            syntaxDefinition.pseudoClasses.definitions\n                ? calculatePseudoSignatures(syntaxDefinition.pseudoClasses.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\n        ]\n        : [false, emptyPseudoSignatures, false], pseudoClassesEnabled = _e[0], pseudoClassesDefinitions = _e[1], pseudoClassesAcceptUnknown = _e[2];\n    var _f = syntaxDefinition.pseudoElements\n        ? [\n            true,\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            !syntaxDefinition.pseudoElements.notation ||\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            syntaxDefinition.pseudoElements.definitions\n                ? calculatePseudoSignatures(Array.isArray(syntaxDefinition.pseudoElements.definitions)\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\n                    : syntaxDefinition.pseudoElements.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoElements.unknown === 'accept'\n        ]\n        : [false, false, false, emptyPseudoSignatures, false], pseudoElementsEnabled = _f[0], pseudoElementsSingleColonNotationEnabled = _f[1], pseudoElementsDoubleColonNotationEnabled = _f[2], pseudoElementsDefinitions = _f[3], pseudoElementsAcceptUnknown = _f[4];\n    var str = '';\n    var l = str.length;\n    var pos = 0;\n    var chr = '';\n    var is = function (comparison) { return chr === comparison; };\n    var isTagStart = function () { return is('*') || isIdentStart(chr); };\n    var rewind = function (newPos) {\n        pos = newPos;\n        chr = str.charAt(pos);\n    };\n    var next = function () {\n        pos++;\n        chr = str.charAt(pos);\n    };\n    var readAndNext = function () {\n        var current = chr;\n        pos++;\n        chr = str.charAt(pos);\n        return current;\n    };\n    /** @throws ParserError */\n    function fail(errorMessage) {\n        var position = Math.min(l - 1, pos);\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\n        error.position = position;\n        error.name = 'ParserError';\n        throw error;\n    }\n    function assert(condition, errorMessage) {\n        if (!condition) {\n            return fail(errorMessage);\n        }\n    }\n    var assertNonEof = function () {\n        assert(pos < l, 'Unexpected end of input.');\n    };\n    var isEof = function () { return pos >= l; };\n    var pass = function (character) {\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\n        pos++;\n        chr = str.charAt(pos);\n    };\n    function matchMulticharIndex(index) {\n        var match = matchMulticharIndexPos(index, pos);\n        if (match) {\n            pos += match.length;\n            chr = str.charAt(pos);\n            return match;\n        }\n    }\n    function matchMulticharIndexPos(index, subPos) {\n        var char = str.charAt(subPos);\n        var charIndex = index[char];\n        if (charIndex) {\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\n            if (subMatch) {\n                return subMatch;\n            }\n            if (charIndex.self) {\n                return charIndex.self;\n            }\n        }\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#hex-digit-diagram\n     */\n    function parseHex() {\n        var hex = readAndNext();\n        var count = 1;\n        while (isHex(chr) && count < maxHexLength) {\n            hex += readAndNext();\n            count++;\n        }\n        skipSingleWhitespace();\n        return String.fromCharCode(parseInt(hex, 16));\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#string-token-diagram\n     */\n    function parseString(quote) {\n        var result = '';\n        pass(quote);\n        while (pos < l) {\n            if (is(quote)) {\n                next();\n                return result;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (is(quote)) {\n                    result += quote;\n                    next();\n                }\n                else if (chr === '\\n' || chr === '\\f') {\n                    next();\n                }\n                else if (chr === '\\r') {\n                    next();\n                    if (is('\\n')) {\n                        next();\n                    }\n                }\n                else if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += chr;\n                    next();\n                }\n            }\n            else {\n                result += chr;\n                next();\n            }\n        }\n        return result;\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#ident-token-diagram\n     */\n    function parseIdentifier() {\n        if (!isIdentStart(chr)) {\n            return null;\n        }\n        var result = '';\n        while (is('-')) {\n            result += chr;\n            next();\n        }\n        if (result === '-' && !isIdent(chr) && !is('\\\\')) {\n            fail('Identifiers cannot consist of a single hyphen.');\n        }\n        if (strict && result.length >= 2) {\n            // Checking this only for strict mode since browsers work fine with these identifiers.\n            fail('Identifiers cannot start with two hyphens with strict mode on.');\n        }\n        if (digitsChars[chr]) {\n            fail('Identifiers cannot start with hyphens followed by digits.');\n        }\n        while (pos < l) {\n            if (isIdent(chr)) {\n                result += readAndNext();\n            }\n            else if (is('\\\\')) {\n                next();\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return result;\n    }\n    function parsePseudoClassString() {\n        var result = '';\n        while (pos < l) {\n            if (is(')')) {\n                break;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (isEof() && !strict) {\n                    return (result + '\\\\').trim();\n                }\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                result += readAndNext();\n            }\n        }\n        return result.trim();\n    }\n    function skipSingleWhitespace() {\n        if (chr === ' ' || chr === '\\t' || chr === '\\f' || chr === '\\n') {\n            next();\n            return;\n        }\n        if (chr === '\\r') {\n            next();\n        }\n        if (chr === '\\n') {\n            next();\n        }\n    }\n    function skipWhitespace() {\n        while (whitespaceChars[chr]) {\n            next();\n        }\n    }\n    function parseSelector(relative) {\n        if (relative === void 0) { relative = false; }\n        skipWhitespace();\n        var rules = [parseRule(relative)];\n        while (is(',')) {\n            next();\n            skipWhitespace();\n            rules.push(parseRule(relative));\n        }\n        return {\n            type: 'Selector',\n            rules: rules\n        };\n    }\n    function parseAttribute() {\n        pass('[');\n        skipWhitespace();\n        var attr;\n        if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var name_1 = parseIdentifier();\n            assert(name_1, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_1,\n                namespace: { type: 'NoNamespace' }\n            };\n        }\n        else if (is('*')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            next();\n            pass('|');\n            var name_2 = parseIdentifier();\n            assert(name_2, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_2,\n                namespace: { type: 'WildcardNamespace' }\n            };\n        }\n        else {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: identifier\n            };\n            if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isIdentStart(chr)) {\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\n                    var name_3 = parseIdentifier();\n                    assert(name_3, 'Expected attribute name.');\n                    attr = {\n                        type: 'Attribute',\n                        name: name_3,\n                        namespace: { type: 'NamespaceName', name: identifier }\n                    };\n                }\n                else {\n                    rewind(savedPos);\n                }\n            }\n        }\n        assert(attr.name, 'Expected attribute name.');\n        skipWhitespace();\n        if (isEof() && !strict) {\n            return attr;\n        }\n        if (is(']')) {\n            next();\n        }\n        else {\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\n            skipWhitespace();\n            assertNonEof();\n            if (quoteChars[chr]) {\n                attr.value = {\n                    type: 'String',\n                    value: parseString(chr)\n                };\n            }\n            else if (substitutesEnabled && is('$')) {\n                next();\n                var name_4 = parseIdentifier();\n                assert(name_4, 'Expected substitute name.');\n                attr.value = {\n                    type: 'Substitution',\n                    name: name_4\n                };\n            }\n            else {\n                var value = parseIdentifier();\n                assert(value, 'Expected attribute value.');\n                attr.value = {\n                    type: 'String',\n                    value: value\n                };\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return attr;\n            }\n            if (!is(']')) {\n                var caseSensitivityModifier = parseIdentifier();\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\n                attr.caseSensitivityModifier = caseSensitivityModifier;\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\n                skipWhitespace();\n                if (isEof() && !strict) {\n                    return attr;\n                }\n            }\n            pass(']');\n        }\n        return attr;\n    }\n    function parseNumber() {\n        var result = '';\n        while (digitsChars[chr]) {\n            result += readAndNext();\n        }\n        assert(result !== '', 'Formula parse error.');\n        return parseInt(result);\n    }\n    var isNumberStart = function () { return is('-') || is('+') || digitsChars[chr]; };\n    function parseFormula() {\n        if (is('e') || is('o')) {\n            var ident = parseIdentifier();\n            if (ident === 'even') {\n                skipWhitespace();\n                return [2, 0];\n            }\n            if (ident === 'odd') {\n                skipWhitespace();\n                return [2, 1];\n            }\n        }\n        var firstNumber = null;\n        var firstNumberMultiplier = 1;\n        if (is('-')) {\n            next();\n            firstNumberMultiplier = -1;\n        }\n        if (isNumberStart()) {\n            if (is('+')) {\n                next();\n            }\n            firstNumber = parseNumber();\n            if (!is('\\\\') && !is('n')) {\n                return [0, firstNumber * firstNumberMultiplier];\n            }\n        }\n        if (firstNumber === null) {\n            firstNumber = 1;\n        }\n        firstNumber *= firstNumberMultiplier;\n        var identifier;\n        if (is('\\\\')) {\n            next();\n            if (isHex(chr)) {\n                identifier = parseHex();\n            }\n            else {\n                identifier = readAndNext();\n            }\n        }\n        else {\n            identifier = readAndNext();\n        }\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\n        skipWhitespace();\n        if (is('+') || is('-')) {\n            var sign = is('+') ? 1 : -1;\n            next();\n            skipWhitespace();\n            return [firstNumber, sign * parseNumber()];\n        }\n        else {\n            return [firstNumber, 0];\n        }\n    }\n    function parsePseudoArgument(pseudoName, type, signature) {\n        var argument;\n        if (is('(')) {\n            next();\n            skipWhitespace();\n            if (substitutesEnabled && is('$')) {\n                next();\n                var name_5 = parseIdentifier();\n                assert(name_5, 'Expected substitute name.');\n                argument = {\n                    type: 'Substitution',\n                    name: name_5\n                };\n            }\n            else if (signature.type === 'String') {\n                argument = {\n                    type: 'String',\n                    value: parsePseudoClassString()\n                };\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\n            }\n            else if (signature.type === 'Selector') {\n                argument = parseSelector(true);\n            }\n            else if (signature.type === 'Formula') {\n                var _a = parseFormula(), a = _a[0], b = _a[1];\n                argument = {\n                    type: 'Formula',\n                    a: a,\n                    b: b\n                };\n                if (signature.ofSelector) {\n                    skipWhitespace();\n                    if (is('o') || is('\\\\')) {\n                        var ident = parseIdentifier();\n                        assert(ident === 'of', 'Formula of selector parse error.');\n                        skipWhitespace();\n                        argument = {\n                            type: 'FormulaOfSelector',\n                            a: a,\n                            b: b,\n                            selector: parseRule()\n                        };\n                    }\n                }\n            }\n            else {\n                return fail(\"Invalid \".concat(type, \" signature.\"));\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return argument;\n            }\n            pass(')');\n        }\n        else {\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\n        }\n        return argument;\n    }\n    function parseTagName() {\n        if (is('*')) {\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\n            next();\n            return { type: 'WildcardTag' };\n        }\n        else if (isIdentStart(chr)) {\n            assert(tagNameEnabled, 'Tag names are not enabled.');\n            var name_6 = parseIdentifier();\n            assert(name_6, 'Expected tag name.');\n            return {\n                type: 'TagName',\n                name: name_6\n            };\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseTagNameWithNamespace() {\n        if (is('*')) {\n            var savedPos = pos;\n            next();\n            if (!is('|')) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'WildcardNamespace' };\n            return tagName;\n        }\n        else if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NoNamespace' };\n            return tagName;\n        }\n        else if (isIdentStart(chr)) {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected tag name.');\n            if (!is('|')) {\n                assert(tagNameEnabled, 'Tag names are not enabled.');\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            var savedPos = pos;\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\n            return tagName;\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseRule(relative) {\n        var _a, _b;\n        if (relative === void 0) { relative = false; }\n        var rule = { type: 'Rule', items: [] };\n        if (relative) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            if (combinator) {\n                rule.combinator = combinator;\n                skipWhitespace();\n            }\n        }\n        while (pos < l) {\n            if (isTagStart()) {\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                rule.items.push(parseTagNameWithNamespace());\n            }\n            else if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isTagStart()) {\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                    rewind(savedPos);\n                    rule.items.push(parseTagNameWithNamespace());\n                }\n                else {\n                    rewind(savedPos);\n                    break;\n                }\n            }\n            else if (is('.')) {\n                assert(classNamesEnabled, 'Class names are not enabled.');\n                next();\n                var className = parseIdentifier();\n                assert(className, 'Expected class name.');\n                rule.items.push({ type: 'ClassName', name: className });\n            }\n            else if (is('#')) {\n                assert(idEnabled, 'IDs are not enabled.');\n                next();\n                var idName = parseIdentifier();\n                assert(idName, 'Expected ID name.');\n                rule.items.push({ type: 'Id', name: idName });\n            }\n            else if (is('[')) {\n                assert(attributesEnabled, 'Attributes are not enabled.');\n                rule.items.push(parseAttribute());\n            }\n            else if (is(':')) {\n                var isDoubleColon = false;\n                var isPseudoElement = false;\n                next();\n                if (is(':')) {\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\n                    isDoubleColon = true;\n                    next();\n                }\n                var pseudoName = parseIdentifier();\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\n                assert(pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon ||\n                    pseudoElementsAcceptUnknown ||\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName), \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\".\"));\n                isPseudoElement =\n                    pseudoElementsEnabled &&\n                        (isDoubleColon ||\n                            (!isDoubleColon &&\n                                pseudoElementsSingleColonNotationEnabled &&\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\n                if (isPseudoElement) {\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && defaultPseudoSignature);\n                    var pseudoElement = {\n                        type: 'PseudoElement',\n                        name: pseudoName\n                    };\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\n                    if (argument) {\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\n                        pseudoElement.argument = argument;\n                    }\n                    rule.items.push(pseudoElement);\n                }\n                else {\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && defaultPseudoSignature);\n                    assert(signature, \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\".\"));\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\n                    var pseudoClass = {\n                        type: 'PseudoClass',\n                        name: pseudoName\n                    };\n                    if (argument) {\n                        pseudoClass.argument = argument;\n                    }\n                    rule.items.push(pseudoClass);\n                }\n            }\n            else {\n                break;\n            }\n        }\n        if (rule.items.length === 0) {\n            if (isEof()) {\n                return fail('Expected rule but end of input reached.');\n            }\n            else {\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\n            }\n        }\n        skipWhitespace();\n        if (!isEof() && !is(',') && !is(')')) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            skipWhitespace();\n            rule.nestedRule = parseRule();\n            rule.nestedRule.combinator = combinator;\n        }\n        return rule;\n    }\n    return function (input) {\n        // noinspection SuspiciousTypeOfGuard\n        if (typeof input !== 'string') {\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\n        }\n        str = input;\n        l = str.length;\n        pos = 0;\n        chr = str.charAt(0);\n        return parseSelector();\n    };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction astMethods(type) {\n    return function (generatorName, checkerName) {\n        var _a;\n        return (_a = {},\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\n            _a[checkerName] = function (entity) {\n                return typeof entity === 'object' && entity !== null && entity.type === type;\n            },\n            _a);\n    };\n}\n/**\n * AST structure generators and matchers.\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\n * AstSelector was specified.\n *\n * @example\n *\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\n * const selector = ast.selector({\n *     rules: [\n *         ast.rule({\n *             items: [\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\n *                 ast.id({name: 'user-34'}),\n *                 ast.className({name: 'user'}),\n *                 ast.className({name: 'user-active'}),\n *                 ast.attribute({\n *                     name: 'role',\n *                     operator: '=',\n *                     value: ast.string({value: 'button'})\n *                 }),\n *                 ast.pseudoClass({\n *                     name: 'lang',\n *                     argument: ast.string({value: 'en'})\n *                 }),\n *                 ast.pseudoElement({name: 'before'})\n *             ],\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\n *         })\n *     ]\n * });\n * console.log(ast.isSelector(selector)); // prints true\n * console.log(ast.isRule(selector)); // prints false\n */\nexport var ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\n","/**\n * @import {AstSelector} from 'css-selector-parser'\n */\n\nimport {createParser} from 'css-selector-parser'\n\nconst cssSelectorParse = createParser({syntax: 'selectors-4'})\n\n/**\n * @param {string} selector\n *   Selector to parse.\n * @returns {AstSelector}\n *   Parsed selector.\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return cssSelectorParse(selector)\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @import {Visitor} from 'unist-util-visit'\n * @import {ElementContent, Nodes} from 'hast'\n * @import {Direction, State} from './index.js'\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {EXIT, SKIP, visit} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {State} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Nodes} node\n *   Node to enter.\n * @returns {() => undefined}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let directionInferred\n\n  if (node.type === 'element') {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const direction = directionProperty(node)\n\n    if (lang !== null && lang !== undefined) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (direction === 'rtl') {\n        directionInferred = direction\n      } else if (\n        // Explicit `[dir=ltr]`.\n        direction === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (direction !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (direction !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        directionInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (direction === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          directionInferred = directionBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          directionInferred = node.properties.value\n            ? directionBidi(String(node.properties.value))\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (directionInferred) {\n        state.direction = directionInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor<ElementContent>} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      directionInferred = directionBidi(child.value)\n      return directionInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        directionProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * See `wooorm/direction`.\n *\n * @param {string} value\n *   Value to check.\n * @returns {Exclude<Direction, 'auto'> | undefined}\n *   Directionality.\n */\nfunction directionBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementContent} node\n *   Node to check.\n * @returns {Direction | undefined}\n *   Directionality.\n */\nfunction directionProperty(node) {\n  const value =\n    node.type === 'element' && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @import {AstAttribute} from 'css-selector-parser'\n * @import {Element, Properties} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find} from 'property-information'\nimport * as spaces from 'space-separated-tokens'\n\n/**\n * @param {AstAttribute} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {Schema} schema\n *   Schema of element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function attribute(query, element, schema) {\n  const info = find(schema, query.name)\n  const propertyValue = element.properties[info.property]\n  let value = normalizeValue(propertyValue, info)\n\n  // Exists.\n  if (!query.value) {\n    return value !== undefined\n  }\n\n  assert(query.value.type === 'String', 'expected plain string')\n  let key = query.value.value\n\n  // Case-sensitivity.\n  if (query.caseSensitivityModifier === 'i') {\n    key = key.toLowerCase()\n\n    if (value) {\n      value = value.toLowerCase()\n    }\n  }\n\n  if (value !== undefined) {\n    switch (query.operator) {\n      // Exact.\n      case '=': {\n        return key === value\n      }\n\n      // Ends.\n      case '$=': {\n        return key === value.slice(-key.length)\n      }\n\n      // Contains.\n      case '*=': {\n        return value.includes(key)\n      }\n\n      // Begins.\n      case '^=': {\n        return key === value.slice(0, key.length)\n      }\n\n      // Exact or prefix.\n      case '|=': {\n        return (\n          key === value ||\n          (key === value.slice(0, key.length) &&\n            value.charAt(key.length) === '-')\n        )\n      }\n\n      // Space-separated list.\n      case '~=': {\n        return (\n          // For all other values (including comma-separated lists), return whether this\n          // is an exact match.\n          key === value ||\n          // If this is a space-separated list, and the query is contained in it, return\n          // true.\n          spaces.parse(value).includes(key)\n        )\n      }\n      // Other values are not yet supported by CSS.\n      // No default\n    }\n  }\n\n  return false\n}\n\n/**\n *\n * @param {Properties[keyof Properties]} value\n * @param {Info} info\n * @returns {string | undefined}\n */\nfunction normalizeValue(value, info) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'boolean') {\n    if (value) {\n      return info.attribute\n    }\n  } else if (Array.isArray(value)) {\n    if (value.length > 0) {\n      return (info.commaSeparated ? commas : spaces.stringify)(value)\n    }\n  } else {\n    return String(value)\n  }\n}\n","/**\n * @import {AstClassName} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */\n\n/** @type {Array<never>} */\nconst emptyClassNames = []\n\n/**\n * Check whether an element has all class names.\n *\n * @param {AstClassName} query\n *   AST rule (with `classNames`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function className(query, element) {\n  // Assume array.\n  const value = /** @type {Readonly<Array<string>>} */ (\n    element.properties.className || emptyClassNames\n  )\n\n  return value.includes(query.name)\n}\n","/**\n * @import {AstId} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */\n\n/**\n * Check whether an element has an ID.\n *\n * @param {AstId} query\n *   AST rule (with `ids`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function id(query, element) {\n  return element.properties.id === query.name\n}\n","/**\n * @import {AstTagName} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {AstTagName} query\n *   AST rule (with `tag`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function name(query, element) {\n  return query.name === element.tagName\n}\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node` is an element and has a `name` property.\n *\n * @template {string} Key\n *   Type of key.\n * @param {Nodes} node\n *   Node to check (typically `Element`).\n * @param {Key} name\n *   Property name to check.\n * @returns {node is Element & {properties: Record<Key, Array<number | string> | number | string | true>}}}\n *   Whether `node` is an element that has a `name` property.\n *\n *   Note: see <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/27c9274/types/hast/index.d.ts#L37C29-L37C98>.\n */\nexport function hasProperty(node, name) {\n  const value =\n    node.type === 'element' &&\n    own.call(node.properties, name) &&\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n",null,null,null,"/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @import {AstPseudoClass} from 'css-selector-parser'\n * @import {default as NthCheck} from 'nth-check'\n * @import {ElementContent, Element, Parents} from 'hast'\n * @import {State} from './index.js'\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {ok as assert, unreachable} from 'devlop'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {walk} from './walk.js'\n\n/** @type {NthCheck} */\n// @ts-expect-error: types are broken.\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */\nexport const pseudo = zwitch('name', {\n  handlers: {\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    is,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-last-of-type': nthLastOfType,\n    'nth-of-type': nthOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  },\n  invalid: invalidPseudo,\n  unknown: unknownPseudo\n})\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {State} state\n *   State.\n * @param {AstPseudoClass} query\n *   Query.\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      (element.properties.type === 'checkbox' ||\n        element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\n// eslint-disable-next-line unicorn/prevent-abbreviations\nfunction dir(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected plain text')\n  return state.direction === query.argument.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @returns {(value: number) => boolean}\n *   N.\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let cachedFunction = query._cachedFn\n\n  if (!cachedFunction) {\n    const value = query.argument\n    assert(value, 'expected `argument`')\n\n    if (value.type !== 'Formula') {\n      throw new Error(\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\n      )\n    }\n\n    cachedFunction = nthCheck(value.a + 'n+' + value.b)\n    // @ts-expect-error: cache.\n    query._cachedFn = cachedFunction\n  }\n\n  return cachedFunction\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction has(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  unreachable('Invalid pseudo-selector')\n}\n\n/**\n * Check whether an element `:is` further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction is(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lang(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected string')\n\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    extendedFilter(state.language, commas(query.argument.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction not(query, element, index, parent, state) {\n  return !is(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.elementIndex === 'number' && cachedFunction(state.elementIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      cachedFunction(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    cachedFunction(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && cachedFunction(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction root(_1, element, _2, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction scope(_1, element, _2, _3, state) {\n  return state.scopeElements.includes(element)\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n *   Element.\n * @param {(child: ElementContent) => boolean} check\n *   Check.\n * @returns {boolean}\n *   Whether a child of `element` matches `check`.\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {unknown} query_\n *   Query-like value.\n * @returns {never}\n *   Nothing.\n * @throws\n *   Exception.\n */\nfunction unknownPseudo(query_) {\n  // Runtime JS guarantees it has a `name`.\n  const query = /** @type {AstPseudoClass} */ (query_)\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\n}\n","/**\n * @import {AstRule} from 'css-selector-parser'\n * @import {Element, Parents} from 'hast'\n * @import {State} from './index.js'\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {AstRule} query\n *   AST rule (with `pseudoClasses`).\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function test(query, element, index, parent, state) {\n  for (const item of query.items) {\n    // eslint-disable-next-line unicorn/prefer-switch\n    if (item.type === 'Attribute') {\n      if (!attribute(item, element, state.schema)) return false\n    } else if (item.type === 'Id') {\n      if (!id(item, element)) return false\n    } else if (item.type === 'ClassName') {\n      if (!className(item, element)) return false\n    } else if (item.type === 'PseudoClass') {\n      if (!pseudo(item, element, index, parent, state)) return false\n    } else if (item.type === 'PseudoElement') {\n      throw new Error('Invalid selector: `::' + item.name + '`')\n    } else if (item.type === 'TagName') {\n      if (!name(item, element)) return false\n    } else {\n      // Otherwise `item.type` is `WildcardTag`, which matches.\n    }\n  }\n\n  return true\n}\n","/**\n * @import {AstRule} from 'css-selector-parser'\n * @import {Element, Nodes, Parents} from 'hast'\n * @import {State} from './index.js'\n */\n\n/**\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<AstRule> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<AstRule> | undefined} descendant\n *   `a b`\n * @property {Array<AstRule> | undefined} directChild\n *   `a > b`\n * @property {Array<AstRule> | undefined} generalSibling\n *   `a ~ b`\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Walk a tree.\n *\n * @param {State} state\n *   State.\n * @param {Nodes | undefined} tree\n *   Tree.\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined, tree)\n  }\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n *   Nesting.\n * @param {keyof Nest} field\n *   Field.\n * @param {AstRule} rule\n *   Rule.\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Check in a parent.\n *\n * @param {State} state\n *   State.\n * @param {Nest} nest\n *   Nesting.\n * @param {Parents} node\n *   Parent.\n * @param {Nodes} tree\n *   Tree.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(state, nest, node, tree) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<AstRule> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(\n        state,\n        forSibling,\n        node.children[index],\n        index,\n        node,\n        tree\n      )\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {State} state\n *   Current state.\n * @param {Array<AstRule>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const rule = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && rule.nestedRule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(rule, node, index, parent, state)) {\n      const nest = rule.nestedRule\n\n      // Are there more?\n      if (nest) {\n        /** @type {keyof Nest} */\n        const label =\n          nest.combinator === '+'\n            ? 'adjacentSibling'\n            : nest.combinator === '~'\n              ? 'generalSibling'\n              : nest.combinator === '>'\n                ? 'directChild'\n                : 'descendant'\n        add(nestResult, label, nest)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (rule.combinator === undefined) {\n      add(nestResult, 'descendant', rule)\n    }\n    // Adjacent.\n    else if (rule.combinator === '~') {\n      add(nestResult, 'generalSibling', rule)\n    }\n    // Drop direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<AstRule> | undefined} left\n *   Rules.\n * @param {Array<AstRule> | undefined} right\n *   Rules.\n * @returns {Array<AstRule>}\n *   Rules.\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n      ? left\n      : right && right.length > 0\n        ? right\n        : empty\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Nodes} node\n *   Node (we’re looking for elements).\n * @returns {undefined}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {State} state\n *   State.\n * @param {Array<AstRule>} currentRules\n *   Rules.\n * @param {Nodes} node\n *   Node.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {Nodes} tree\n *   Tree.\n * @returns {Nest}\n *   Nesting.\n */\nfunction one(state, currentRules, node, index, parent, tree) {\n  /** @type {Nest} */\n  let nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    let rootRules = state.rootQuery.rules\n\n    // Remove direct child rules if this is the root.\n    // This only happens for a `:has()` rule, which can be like\n    // `a:has(> b)`.\n    if (parent && parent !== tree) {\n      rootRules = state.rootQuery.rules.filter(\n        (d) =>\n          d.combinator === undefined ||\n          (d.combinator === '>' && parent === tree)\n      )\n    }\n\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, rootRules),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node, tree)\n  }\n\n  exit()\n\n  return nestResult\n}\n","/**\n * @import {AstSelector} from 'css-selector-parser'\n * @import {Element, Nodes, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n */\n\n/**\n * @typedef {'html' | 'svg'} Space\n *   Name of namespace.\n *\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\n *   Direction.\n *\n * @typedef State\n *   Current state.\n * @property {Direction} direction\n *   Current direction.\n * @property {boolean} editableOrEditingHost\n *   Whether we’re in `contentEditable`.\n * @property {number | undefined} elementCount\n *   Track siblings: there are `n` siblings.\n * @property {number | undefined} elementIndex\n *   Track siblings: this current element has `n` elements before it.\n * @property {boolean} found\n *   Whether we found at least one match.\n * @property {string | undefined} language\n *   Current language.\n * @property {boolean} one\n *   Whether we can stop looking after we found one element.\n * @property {Array<Element>} results\n *   Matches.\n * @property {AstSelector} rootQuery\n *   Original root selectors.\n * @property {Schema} schema\n *   Current schema.\n * @property {Array<RootContent>} scopeElements\n *   Elements in scope.\n * @property {boolean} shallow\n *   Whether we only allow selectors without nesting.\n * @property {number | undefined} typeCount\n *   Track siblings: there are `n` siblings with this element’s tag name.\n * @property {number | undefined} typeIndex\n *   Track siblings: this current element has `n` elements with its tag name\n *   before it.\n */\n\nimport {html, svg} from 'property-information'\nimport {parse} from './parse.js'\nimport {walk} from './walk.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [node]\n *   Node that might match `selector`, should be an element (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Element | undefined}\n *   First element in `tree` that matches `selector` or `undefined` if nothing\n *   is found; this could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  return state.results[0]\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {State} State\n *   State.\n */\nfunction createState(selector, tree, space) {\n  return {\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    elementCount: undefined,\n    elementIndex: undefined,\n    found: false,\n    language: undefined,\n    one: false,\n    // State of the query.\n    results: [],\n    rootQuery: parse(selector),\n    schema: space === 'svg' ? svg : html,\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    shallow: false,\n    typeIndex: undefined,\n    typeCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index?: number, parent?: Root | Element): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import type { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport type { RehypeAttrsOptions } from './index.js';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import type { Plugin } from 'unified';\nimport type { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {Array<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @import {Options} from 'hast-util-raw'\n * @import {Comment, Doctype, Element, Nodes, RootContent, Root, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {DefaultTreeAdapterMap, ParserOptions} from 'parse5'\n * @import {Point} from 'unist'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst gfmTagfilterExpression =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions<DefaultTreeAdapterMap>} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {Token.CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {Token.DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {Token.CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n\n  state.parser.tokenizer.write(\n    state.options.tagfilter\n      ? node.value.replace(gfmTagfilterExpression, '&lt;$1$2')\n      : node.value,\n    false\n  )\n  // @ts-expect-error: private.\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  // To do: remove next major.\n  /* c8 ignore next 12 -- removed in <https://github.com/inikulin/parse5/pull/897> */\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    // @ts-expect-error: removed.\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {Token.CharacterToken} */\n  // @ts-expect-error: private.\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Token.Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n    // Note: `<plaintext>` not needed, as it’s the last element.\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Token.Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Token.Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[text][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push([...events]);\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      events.push(...slice);\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import { visit } from 'unist-util-visit';\nimport type { Plugin } from 'unified';\nimport type { Root, PhrasingContent } from \"mdast\";\n\nconst alertRegex = /^\\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\\]/i;\nconst alertLegacyRegex = /^\\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)(\\/.*)?\\]/i;\n\ntype Option = {\n  /**\n   * Use the legacy title format, which includes a slash and a title after the alert type.\n   * \n   * Enabling legacyTitle allows modifying the title, but this is not GitHub standard.\n   */\n  legacyTitle?: boolean;\n  /**\n   * The tag name of the alert container. default is `div`.\n   * or you can use `blockquote` for semantic HTML.\n   */\n  tagName?: string;\n}\n\n/**\n * Alerts are a Markdown extension based on the blockquote syntax that you can use to emphasize critical information.\n * On GitHub, they are displayed with distinctive colors and icons to indicate the significance of the content.\n * https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts\n */\nexport const remarkAlert: Plugin<[Option?], Root> = ({ legacyTitle = false, tagName = \"div\" } = {}) => {\n  return (tree) => {\n    visit(tree, \"blockquote\", (node, index, parent) => {\n      let alertType = '';\n      let title = '';\n      let isNext = true;\n      let child = node.children.map((item) => {\n        if (isNext && item.type === \"paragraph\") {\n          const firstNode = item.children[0];\n          const text = firstNode.type === 'text' ? firstNode.value : '';\n          const reg = legacyTitle ? alertLegacyRegex : alertRegex;\n          const match = text.match(reg);\n          if (match) {\n            isNext = false;\n            alertType = match[1].toLocaleLowerCase();\n            title = legacyTitle ? match[2] || alertType.toLocaleUpperCase() : alertType.toLocaleUpperCase();\n            if (text.includes('\\n')) {\n              item.children[0] = {\n                type: 'text',\n                value: text.replace(reg, '').replace(/^\\n+/, ''),\n              };\n            }\n\n            if (!text.includes('\\n')) {\n              const itemChild: Array<PhrasingContent> = [];\n              item.children.forEach((item, idx) => {\n                if (idx == 0) return;\n                if (idx == 1 && item.type === 'break') {\n                  return;\n                }\n                itemChild.push(item);\n              });\n              item.children = [...itemChild];\n            }\n          }\n        }\n        return item;\n      })\n\n      if (!!alertType) {\n        node.data = {\n          hName: tagName,\n          hProperties: {\n            class: `markdown-alert markdown-alert-${alertType}`,\n            dir: 'auto'\n          },\n        }\n        child.unshift({\n          type: \"paragraph\",\n          children: [\n            getAlertIcon(alertType as IconType),\n            {\n              type: \"text\",\n              value: title.replace(/^\\//, ''),\n            }\n          ],\n          data: {\n            hProperties: {\n              class: \"markdown-alert-title\",\n              dir: \"auto\"\n            }\n          }\n        })\n      }\n      node.children = [...child];\n    });\n  };\n};\n\nexport function getAlertIcon(type: IconType): PhrasingContent {\n  let pathD = pathData[type] ?? '';\n  return {\n    type: \"emphasis\",\n    data: {\n      hName: \"svg\",\n      hProperties: {\n        class: \"octicon\",\n        viewBox: '0 0 16 16',\n        width: '16',\n        height: '16',\n        ariaHidden: 'true',\n      },\n    },\n    children: [\n      {\n        type: \"emphasis\",\n        data: {\n          hName: \"path\",\n          hProperties: {\n            d: pathD\n          }\n        },\n        children: []\n      }\n    ]\n  }\n}\n\ntype IconType = 'note' | 'tip' | 'important' | 'warning' | 'caution';\n\nconst pathData: Record<IconType, string> = {\n  note: 'M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z',\n  tip: 'M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z',\n  important:\n    'M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0 1 14.25 13H8.06l-2.573 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25Zm7 2.25v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z',\n  warning:\n    'M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z',\n  caution:\n    'M4.47.22A.749.749 0 0 1 5 0h6c.199 0 .389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749 0 0 1-.22.53l-4.25 4.25A.749.749 0 0 1 11 16H5a.749.749 0 0 1-.53-.22L.22 11.53A.749.749 0 0 1 0 11V5c0-.199.079-.389.22-.53Zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5ZM8 4a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 4Zm0 8a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z',\n};\n","import copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { useEffect } from 'react';\nfunction getParentElement(target) {\n  if (!target) return null;\n  var dom = target;\n  if (dom.dataset.code && dom.classList.contains('copied')) {\n    return dom;\n  }\n  if (dom.parentElement) {\n    return getParentElement(dom.parentElement);\n  }\n  return null;\n}\nexport function useCopied(container) {\n  var handle = event => {\n    var target = getParentElement(event.target);\n    if (!target) return;\n    target.classList.add('active');\n    copyTextToClipboard(target.dataset.code, function () {\n      setTimeout(() => {\n        target.classList.remove('active');\n      }, 2000);\n    });\n  };\n  useEffect(() => {\n    var _container$current, _container$current2;\n    (_container$current = container.current) == null || _container$current.removeEventListener('click', handle, false);\n    (_container$current2 = container.current) == null || _container$current2.addEventListener('click', handle, false);\n    return () => {\n      var _container$current3;\n      (_container$current3 = container.current) == null || _container$current3.removeEventListener('click', handle, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container]);\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"source\", \"style\", \"disableCopy\", \"skipHtml\", \"onScroll\", \"onMouseOver\", \"pluginsFilter\", \"rehypeRewrite\", \"wrapperElement\", \"warpperElement\", \"urlTransform\"];\nimport React, { useImperativeHandle } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport raw from 'rehype-raw';\nimport { remarkAlert } from 'remark-github-blockquote-alert';\nimport { useCopied } from './plugins/useCopied';\nimport \"./styles/markdown.css\";\n\n/**\n * https://github.com/uiwjs/react-md-editor/issues/607\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultUrlTransform = url => url;\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      prefixCls = 'wmde-markdown wmde-markdown-color',\n      className,\n      source,\n      style,\n      disableCopy = false,\n      skipHtml = true,\n      onScroll,\n      onMouseOver,\n      pluginsFilter,\n      wrapperElement = {},\n      warpperElement = {},\n      urlTransform\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var mdp = React.useRef(null);\n  useImperativeHandle(ref, () => _extends({}, props, {\n    mdp\n  }), [mdp, props]);\n  var cls = (prefixCls || '') + \" \" + (className || '');\n  useCopied(mdp);\n  var rehypePlugins = [...(other.rehypePlugins || [])];\n  var customProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    }\n  };\n  if (skipHtml) {\n    rehypePlugins.push(raw);\n  }\n  var remarkPlugins = [remarkAlert, ...(other.remarkPlugins || []), gfm];\n  var wrapperProps = _extends({}, warpperElement, wrapperElement);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: mdp,\n    onScroll: onScroll,\n    onMouseOver: onMouseOver\n  }, wrapperProps, {\n    className: cls,\n    style: style,\n    children: /*#__PURE__*/_jsx(ReactMarkdown, _extends({}, customProps, other, {\n      skipHtml: skipHtml,\n      urlTransform: urlTransform || defaultUrlTransform,\n      rehypePlugins: pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins,\n      remarkPlugins: pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins,\n      children: source || ''\n    }))\n  }));\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport { visit } from 'unist-util-visit';\nexport var reservedMeta = function reservedMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = _extends({}, node.properties, {\n          'data-meta': String(node.data.meta)\n        });\n      }\n    });\n  };\n};","import { visit } from 'unist-util-visit';\nexport var retrieveMeta = function retrieveMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.properties && node.properties['dataMeta']) {\n        if (!node.data) {\n          node.data = {};\n        }\n        var metaString = node.properties['dataMeta'];\n        if (typeof metaString === 'string') {\n          node.data.meta = metaString;\n        }\n        delete node.properties['dataMeta'];\n      }\n    });\n  };\n};","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Nodes} node\n *   Node to check.\n * @returns {number | undefined}\n *   Rank of the heading or `undefined` if not a heading.\n */\nexport function headingRank(node) {\n  const name = node.type === 'element' ? node.tagName.toLowerCase() : ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */\n    ? code - 48 /* `0` */\n    : undefined\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\nconst slugs = new GithubSlugger()\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions\n  const prefix = settings.prefix || ''\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset()\n\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-is-element').Test} Test\n */\n\n/**\n * @typedef {'after' | 'append' | 'before' | 'prepend' | 'wrap'} Behavior\n *   Behavior.\n *\n * @callback Build\n *   Generate content.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Content.\n *\n * @callback BuildProperties\n *   Generate properties.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Properties}\n *   Properties.\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior | null | undefined} [behavior='prepend']\n *   How to create links (default: `'prepend'`).\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [content]\n *   Content to insert in the link (default: if `'wrap'` then `undefined`,\n *   otherwise `<span class=\"icon icon-link\"></span>`);\n *   if `behavior` is `'wrap'` and `Build` is passed, its result replaces the\n *   existing content, otherwise the content is added after existing content.\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [group]\n *   Content to wrap the heading and link with, if `behavior` is `'after'` or\n *   `'before'` (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [headingProperties]\n *   Extra properties to set on the heading (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [properties]\n *   Extra properties to set on the link when injecting (default:\n *   `{ariaHidden: true, tabIndex: -1}` if `'append'` or `'prepend'`, otherwise\n *   `undefined`).\n * @property {Test | null | undefined} [test]\n *   Extra test for which headings are linked (optional).\n */\n\n/**\n * @template T\n *   Kind.\n * @typedef {(\n *   T extends Record<any, any>\n *     ? {-readonly [k in keyof T]: Cloneable<T[k]>}\n *     : T\n * )} Cloneable\n *   Deep clone.\n *\n *   See: <https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1237#issuecomment-1345515448>\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add links from headings back to themselves.\n *\n * ###### Notes\n *\n * This plugin only applies to headings with `id`s.\n * Use `rehype-slug` to generate `id`s for headings that don’t have them.\n *\n * Several behaviors are supported:\n *\n * *   `'prepend'` (default) — inject link before the heading text\n * *   `'append'` — inject link after the heading text\n * *   `'wrap'` — wrap the whole heading text with the link\n * *   `'before'` — insert link before the heading\n * *   `'after'` — insert link after the heading\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeAutolinkHeadings(options) {\n  const settings = options || emptyOptions\n  let properties = settings.properties\n  const headingOroperties = settings.headingProperties\n  const behavior = settings.behavior || 'prepend'\n  const content = settings.content\n  const group = settings.group\n  const is = convertElement(settings.test)\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  let method\n\n  if (behavior === 'after' || behavior === 'before') {\n    method = around\n  } else if (behavior === 'wrap') {\n    method = wrap\n  } else {\n    method = inject\n\n    if (!properties) {\n      properties = {ariaHidden: 'true', tabIndex: -1}\n    }\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (headingRank(node) && node.properties.id && is(node, index, parent)) {\n        Object.assign(node.properties, toProperties(headingOroperties, node))\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function inject(node) {\n    const children = toChildren(content || contentDefaults, node)\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, toProperties(properties, node), children)\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function around(node, index, parent) {\n    /* c8 ignore next -- uncommon */\n    if (typeof index !== 'number' || !parent) return\n\n    const children = toChildren(content || contentDefaults, node)\n    const link = create(node, toProperties(properties, node), children)\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function wrap(node) {\n    /** @type {Array<ElementContent>} */\n    let before = node.children\n    /** @type {Array<ElementContent> | ElementContent} */\n    let after = []\n\n    if (typeof content === 'function') {\n      before = []\n      after = content(node)\n    } else if (content) {\n      after = clone(content)\n    }\n\n    node.children = [\n      create(\n        node,\n        toProperties(properties, node),\n        Array.isArray(after) ? [...before, ...after] : [...before, after]\n      )\n    ]\n\n    return [SKIP]\n  }\n}\n\n/**\n * Deep clone.\n *\n * @template T\n *   Kind.\n * @param {T} thing\n *   Thing to clone.\n * @returns {Cloneable<T>}\n *   Cloned thing.\n */\nfunction clone(thing) {\n  // Cast because it’s mutable now.\n  return /** @type {Cloneable<T>} */ (structuredClone(thing))\n}\n\n/**\n * Create an `a`.\n *\n * @param {Readonly<Element>} node\n *   Related heading.\n * @param {Properties | undefined} properties\n *   Properties to set on the link.\n * @param {Array<ElementContent>} children\n *   Content.\n * @returns {Element}\n *   Link.\n */\nfunction create(node, properties, children) {\n  return {\n    type: 'element',\n    tagName: 'a',\n    properties: {...properties, href: '#' + node.properties.id},\n    children\n  }\n}\n\n/**\n * Turn into children.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent>}\n *   Children.\n */\nfunction toChildren(value, node) {\n  const result = toNode(value, node)\n  return Array.isArray(result) ? result : [result]\n}\n\n/**\n * Turn into a node.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Node.\n */\nfunction toNode(value, node) {\n  if (typeof value === 'function') return value(node)\n  return clone(value)\n}\n\n/**\n * Turn into properties.\n *\n * @param {Readonly<Properties> | BuildProperties | null | undefined} value\n *   Properties.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Properties}\n *   Properties.\n */\nfunction toProperties(value, node) {\n  if (typeof value === 'function') return value(node)\n  return value ? clone(value) : {}\n}\n","import type { Plugin, Pluggable } from 'unified';\nimport type { Root, RootContent, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\n\n/**\n * Raw string of HTML embedded into HTML AST.\n */\nexport interface Raw extends Literal {\n  /**\n   * Node type.\n   */\n  type: 'raw'\n}\n\n// Register nodes in content.\ndeclare module 'hast' {\n  interface RootContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n  interface ElementContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n}\n\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","export var octiconLink = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true'\n  },\n  children: [{\n    type: 'element',\n    tagName: 'path',\n    children: [],\n    properties: {\n      fillRule: 'evenodd',\n      d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'\n    }\n  }]\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeIgnore from 'rehype-ignore';\nimport { getCodeString } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nexport var rehypeRewriteHandle = (disableCopy, rewrite) => (node, index, parent) => {\n  if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n    var child = node.children && node.children[0];\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\n      child.properties = _extends({\n        class: 'anchor'\n      }, child.properties);\n      child.children = [octiconLink];\n    }\n  }\n  if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n    var code = getCodeString(node.children);\n    node.children.push(copyElement(code));\n  }\n  rewrite && rewrite(node, index === null ? undefined : index, parent === null ? undefined : parent);\n};\nexport var defaultRehypePlugins = [slug, headings, rehypeIgnore];","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite from 'rehype-rewrite';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeRaw from 'rehype-raw';\nimport MarkdownPreview from './preview';\nimport { reservedMeta } from './plugins/reservedMeta';\nimport { retrieveMeta } from './plugins/retrieveMeta';\nimport { rehypeRewriteHandle, defaultRehypePlugins } from './rehypePlugins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from './Props';\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _props$disableCopy;\n  var rehypePlugins = [reservedMeta, rehypeRaw, retrieveMeta, ...defaultRehypePlugins, [rehypeRewrite, {\n    rewrite: rehypeRewriteHandle((_props$disableCopy = props.disableCopy) != null ? _props$disableCopy : false, props.rehypeRewrite)\n  }], [rehypeAttrs, {\n    properties: 'attr'\n  }], ...(props.rehypePlugins || []), [rehypePrism, {\n    ignoreMissing: true\n  }]];\n  return /*#__PURE__*/_jsx(MarkdownPreview, _extends({}, props, {\n    rehypePlugins: rehypePlugins,\n    ref: ref\n  }));\n});","export function copyElement(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      class: 'copied',\n      'data-code': str\n    },\n    children: [{\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-copy',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z'\n        },\n        children: []\n      }, {\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z'\n        },\n        children: []\n      }]\n    }, {\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-check',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z'\n        },\n        children: []\n      }]\n    }]\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"keyCode\", \"onMouseDown\", \"onMouseUp\"];\nimport React from 'react';\nimport \"./style/index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar keyCodeData = [{\n  keycode: 27,\n  name: ['esc']\n}, {\n  keycode: 112,\n  name: ['F1']\n}, {\n  keycode: 113,\n  name: ['F2']\n}, {\n  keycode: 114,\n  name: ['F3']\n}, {\n  keycode: 115,\n  name: ['F4']\n}, {\n  keycode: 116,\n  name: ['F5']\n}, {\n  keycode: 117,\n  name: ['F6']\n}, {\n  keycode: 118,\n  name: ['F7']\n}, {\n  keycode: 119,\n  name: ['F8']\n}, {\n  keycode: 120,\n  name: ['F9']\n}, {\n  keycode: 121,\n  name: ['F10']\n}, {\n  keycode: 122,\n  name: ['F11']\n}, {\n  keycode: 123,\n  name: ['F12']\n}, {\n  keycode: -1,\n  name: ['〇']\n}, {\n  keycode: 192,\n  name: ['~', '`']\n}, {\n  keycode: 49,\n  name: ['!', '1']\n}, {\n  keycode: 50,\n  name: ['@', '2']\n}, {\n  keycode: 51,\n  name: ['#', '3']\n}, {\n  keycode: 52,\n  name: ['$', '4']\n}, {\n  keycode: 53,\n  name: ['%', '5']\n}, {\n  keycode: 54,\n  name: ['^', '6']\n}, {\n  keycode: 55,\n  name: ['&', '7']\n}, {\n  keycode: 56,\n  name: ['*', '8']\n}, {\n  keycode: 57,\n  name: ['(', '9']\n}, {\n  keycode: 48,\n  name: [')', '0']\n}, {\n  keycode: 189,\n  name: ['＿', '-']\n}, {\n  keycode: 187,\n  name: ['＋', ': ']\n}, {\n  keycode: 8,\n  name: ['delete']\n}, {\n  keycode: 9,\n  name: ['tab']\n}, {\n  keycode: 81,\n  name: ['Q']\n}, {\n  keycode: 87,\n  name: ['W']\n}, {\n  keycode: 69,\n  name: ['E']\n}, {\n  keycode: 82,\n  name: ['R']\n}, {\n  keycode: 84,\n  name: ['T']\n}, {\n  keycode: 89,\n  name: ['Y']\n}, {\n  keycode: 85,\n  name: ['U']\n}, {\n  keycode: 73,\n  name: ['I']\n}, {\n  keycode: 79,\n  name: ['O']\n}, {\n  keycode: 80,\n  name: ['P']\n}, {\n  keycode: 219,\n  name: ['{', '[']\n}, {\n  keycode: 221,\n  name: ['}', ']']\n}, {\n  keycode: 220,\n  name: ['|', '\\\\']\n}, {\n  keycode: 20,\n  name: ['', 'CapsLock']\n}, {\n  keycode: 65,\n  name: ['A']\n}, {\n  keycode: 83,\n  name: ['S']\n}, {\n  keycode: 68,\n  name: ['D']\n}, {\n  keycode: 70,\n  name: ['F']\n}, {\n  keycode: 71,\n  name: ['G']\n}, {\n  keycode: 72,\n  name: ['H']\n}, {\n  keycode: 74,\n  name: ['J']\n}, {\n  keycode: 75,\n  name: ['K']\n}, {\n  keycode: 76,\n  name: ['L']\n}, {\n  keycode: 186,\n  name: [':', ';']\n}, {\n  keycode: 222,\n  name: ['\"', \"'\"]\n}, {\n  keycode: 13,\n  name: ['enter', 'return']\n}, {\n  keycode: 16,\n  name: ['⇧']\n}, {\n  keycode: 90,\n  name: ['Z']\n}, {\n  keycode: 88,\n  name: ['X']\n}, {\n  keycode: 67,\n  name: ['C']\n}, {\n  keycode: 86,\n  name: ['V']\n}, {\n  keycode: 66,\n  name: ['B']\n}, {\n  keycode: 78,\n  name: ['N']\n}, {\n  keycode: 77,\n  name: ['M']\n}, {\n  keycode: 188,\n  name: ['<', ',']\n}, {\n  keycode: 190,\n  name: ['>', '.']\n}, {\n  keycode: 191,\n  name: ['?', '/']\n}, {\n  keycode: 16,\n  name: ['⇧']\n}, {\n  keycode: -1,\n  name: ['fn']\n}, {\n  keycode: 17,\n  name: ['control']\n}, {\n  keycode: 18,\n  name: ['alt', 'option']\n}, {\n  keycode: 91,\n  name: ['command']\n}, {\n  keycode: 32,\n  name: ['']\n}, {\n  keycode: 91,\n  name: ['command']\n}, {\n  keycode: 18,\n  name: ['alt', 'option']\n}, {\n  keycode: 37,\n  name: ['◀']\n}, {\n  keycode: 38,\n  name: ['▲']\n}, {\n  keycode: 39,\n  name: ['▶']\n}, {\n  keycode: 40,\n  name: ['▼']\n}];\nexport default function MacKeyBoard(_ref) {\n  var {\n      prefixCls = 'w-mac-keyboard',\n      className,\n      style,\n      keyCode = [],\n      onMouseDown: _onMouseDown,\n      onMouseUp: _onMouseUp\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: (prefixCls || '') + \" \" + (className || ''),\n    style: style,\n    children: /*#__PURE__*/_jsx(\"ul\", {\n      children: keyCodeData.map((item, idx) => {\n        var name = item.name.map((_item, _idx) => /*#__PURE__*/_jsx(\"span\", {\n          children: _item\n        }, \"\" + _idx));\n        return /*#__PURE__*/_jsx(\"li\", _extends({\n          onMouseDown: e => _onMouseDown && _onMouseDown(e, item),\n          onMouseUp: e => _onMouseUp && _onMouseUp(e, item),\n          className: keyCode.indexOf(item.keycode) > -1 ? 'pressed' : '',\n          \"data-key\": item.keycode\n        }, props, {\n          children: name\n        }), idx);\n      })\n    })\n  });\n}","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"Footer_footer__6AZaJ\"};","import React from 'react';\nimport style from './Footer.module.less';\n\nexport default function Footer({ name, href, year, children }) {\n  return (\n    <div className={style.footer}>\n      {children}\n      <div>\n        Licensed under MIT. (Yes it&acute;s free and\n        <a href=\"https://github.com/jaywcjlove/hotkeys\"> open-sourced</a>\n        )\n      </div>\n      <div>\n        ©\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={href}>{name}</a>\n        {year}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tools\":\"index_tools__z-HKb\",\"version\":\"index_version__-ytTx\",\"keyCodeInfo\":\"index_keyCodeInfo__cHMZ+\",\"header\":\"index_header__jwPmf\",\"title\":\"index_title__X9GPx\",\"lang\":\"index_lang__8GECo\",\"info\":\"index_info__QmMpI\",\"github\":\"index_github__CJgBc\"};","export default \"# Hotkeys\\n\\n<!--dividing-->\\n\\n[![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor)\\n[![](https://img.shields.io/npm/dm/hotkeys-js?logo=npm)](https://www.npmjs.com/package/hotkeys-js)\\n[![](https://img.shields.io/github/stars/jaywcjlove/hotkeys-js.svg)](https://github.com/jaywcjlove/hotkeys/stargazers)\\n![no dependencies](http://jaywcjlove.github.io/sb/status/no-dependencies.svg)\\n[![GitHub Actions CI](https://github.com/jaywcjlove/hotkeys-js/actions/workflows/ci.yml/badge.svg)](https://github.com/jaywcjlove/hotkeys-js/actions/workflows/ci.yml)\\n[![Coverage Status](https://coveralls.io/repos/github/jaywcjlove/hotkeys/badge.svg?branch=master)](https://coveralls.io/github/jaywcjlove/hotkeys?branch=master)\\n[![jaywcjlove/hotkeys-js](https://jaywcjlove.github.io/sb/lang/chinese.svg)](https://github.com/jaywcjlove/hotkeys-js/blob/master/README-zh.md)\\n[![jaywcjlove/hotkeys-js](https://jaywcjlove.github.io/sb/ico/gitee.svg)](https://gitee.com/jaywcjlove/hotkeys)\\n\\nHotKeys.js is an input capture library with some very special features, it is easy to pick up and use, has a reasonable footprint ([~6kB](https://bundlephobia.com/result?p=hotkeys-js)) (gzipped: **`2.8kB`**), and has no dependencies. It should not interfere with any JavaScript libraries or frameworks. Official document [demo preview](https://jaywcjlove.github.io/hotkeys-js). [More examples](https://github.com/jaywcjlove/hotkeys-js/issues?q=label%3ADemo+).\\n\\n```bash\\n╭┈┈╮          ╭┈┈╮  ╭┈┈╮\\n┆  ├┈┈..┈┈┈┈┈.┆  └┈╮┆  ├┈┈..┈┈┈┈┈..┈┈.┈┈..┈┈┈┈┈.\\n┆     ┆┆  □  ┆┆   ┈┤┆    < ┆  -__┘┆  ┆  ┆┆__ ┈┈┤\\n╰┈┈┴┈┈╯╰┈┈┈┈┈╯╰┈┈┈┈╯╰┈┈┴┈┈╯╰┈┈┈┈┈╯╰┈┈┈  ┆╰┈┈┈┈┈╯\\n                                  ╰┈┈┈┈┈╯\\n```\\n\\n## Usage\\n\\nYou will need `Node.js` installed on your system.\\n\\n```bash\\nnpm install hotkeys-js --save\\n```\\n\\n```js\\nimport hotkeys from 'hotkeys-js';\\n\\nhotkeys('f5', function(event, handler){\\n  // Prevent the default refresh event under WINDOWS system\\n  event.preventDefault()\\n  alert('you pressed F5!')\\n});\\n```\\n\\nOr manually download and link **hotkeys.js** in your HTML, It can also be downloaded via [UNPKG](https://unpkg.com/hotkeys-js/dist/):\\n\\nCDN: [UNPKG](https://unpkg.com/hotkeys-js/dist/) | [jsDelivr](https://cdn.jsdelivr.net/npm/hotkeys-js@3.7.3/) | [Githack](https://raw.githack.com/jaywcjlove/hotkeys/master/dist/hotkeys.min.js) | [Statically](https://cdn.statically.io/gh/jaywcjlove/hotkeys/master/dist/hotkeys.min.js) | [bundle.run](https://bundle.run/hotkeys-js@3.7.3)\\n\\n```html\\n<script src=\\\"https://unpkg.com/hotkeys-js/dist/hotkeys.min.js\\\"></script>\\n<script type=\\\"text/javascript\\\">\\nhotkeys('ctrl+a,ctrl+b,r,f', function (event, handler){\\n  switch (handler.key) {\\n    case 'ctrl+a': alert('you pressed ctrl+a!');\\n      break;\\n    case 'ctrl+b': alert('you pressed ctrl+b!');\\n      break;\\n    case 'r': alert('you pressed r!');\\n      break;\\n    case 'f': alert('you pressed f!');\\n      break;\\n    default: alert(event);\\n  }\\n});\\n</script>\\n```\\n\\n### Used in React\\n\\n[react-hotkeys](https://github.com/jaywcjlove/react-hotkeys) is the React component that listen to keydown and keyup keyboard events, defining and dispatching keyboard shortcuts. Detailed use method please see its documentation [react-hotkeys](https://github.com/jaywcjlove/react-hotkeys).\\n\\n[react-hotkeys-hook](https://github.com/JohannesKlauss/react-hotkeys-hook) - React hook for using keyboard shortcuts in components. Make sure that you have at least version 16.8 of react and react-dom installed, or otherwise hooks won't work for you.\\n\\n## Browser Support\\n\\nHotkeys.js has been tested and should work in.\\n\\n```shell\\nInternet Explorer 6+\\nSafari\\nFirefox\\nChrome\\n```\\n\\n## Supported Keys\\n\\nHotKeys understands the following modifiers: `⇧`, `shift`, `option`, `⌥`, `alt`, `ctrl`, `control`, `command`, and `⌘`.\\n\\nThe following special keys can be used for shortcuts: backspace, tab, clear, enter, return, esc, escape, space, up, down, left, right, home, end, pageup, pagedown, del, delete, f1 through f19, num_0 through num_9, num_multiply, num_add, num_enter, num_subtract, num_decimal, num_divide.\\n\\n`⌘` Command()\\n`⌃` Control\\n`⌥` Option(alt)\\n`⇧` Shift\\n`⇪` Caps Lock(Capital)\\n~~`fn` Does not support fn~~\\n`↩︎` return/Enter space\\n\\n## Defining Shortcuts\\n\\nOne global method is exposed, key which defines shortcuts when called directly.\\n\\n```js\\nhotkeys([keys:<String>], [option:[string|object|function]], [callback:<function>])\\n```\\n\\n\\n```js\\nhotkeys('f5', function(event, handler) {\\n  // Prevent the default refresh event under WINDOWS system\\n  event.preventDefault();\\n  alert('you pressed F5!');\\n});\\n\\n// Returning false stops the event and prevents default browser events\\n// Mac OS system defines `command + r` as a refresh shortcut\\nhotkeys('ctrl+r, command+r', function() {\\n  alert('stopped reload!');\\n  return false;\\n});\\n\\n// Single key\\nhotkeys('a', function(event,handler){\\n  //event.srcElement: input\\n  //event.target: input\\n  if(event.target === \\\"input\\\"){\\n      alert('you pressed a!')\\n  }\\n  alert('you pressed a!')\\n});\\n\\n// Key Combination\\nhotkeys('ctrl+a,ctrl+b,r,f', function (event, handler){\\n  switch (handler.key) {\\n    case 'ctrl+a': alert('you pressed ctrl+a!');\\n      break;\\n    case 'ctrl+b': alert('you pressed ctrl+b!');\\n      break;\\n    case 'r': alert('you pressed r!');\\n      break;\\n    case 'f': alert('you pressed f!');\\n      break;\\n    default: alert(event);\\n  }\\n});\\n\\nhotkeys('ctrl+a+s', function() {\\n    alert('you pressed ctrl+a+s!');\\n});\\n\\n// Using a scope\\nhotkeys('*','wcj', function(event){\\n  console.log('do something', event);\\n});\\n```\\n\\n#### option\\n\\n- `scope<String>`: Sets the scope in which the shortcut key is active\\n- `element<HTMLElement>`: Specifies the DOM element to bind the event to\\n- `keyup<Boolean>`: Whether to trigger the shortcut on key release\\n- `keydown<Boolean>`: Whether to trigger the shortcut on key press\\n- `splitKey<String>`: Delimiter for key combinations (default is `+`)\\n- `capture<Boolean>`: Whether to trigger the listener during the capture phase (before the event bubbles down)\\n- `single<Boolean>`: Allows only one callback function (automatically unbinds previous one)\\n\\n```js\\nhotkeys('o, enter', {\\n  scope: 'wcj',\\n  element: document.getElementById('wrapper'),\\n}, function() {\\n  console.log('do something else');\\n});\\n\\nhotkeys('ctrl-+', { splitKey: '-' }, function(e) {\\n  console.log('you pressed ctrl and +');\\n});\\n\\nhotkeys('+', { splitKey: '-' }, function(e){\\n  console.log('you pressed +');\\n})\\n```\\n\\n**keyup**\\n\\n**key down** and **key up** both perform callback events.\\n\\n```js\\nhotkeys('ctrl+a,alt+a+s', {keyup: true}, function(event, handler) {\\n  if (event.type === 'keydown') {\\n    console.log('keydown:', event.type, handler, handler.key);\\n  }\\n\\n  if (event.type === 'keyup') {\\n    console.log('keyup:', event.type, handler, handler.key);\\n  }\\n});\\n```\\n\\n## API REFERENCE\\n\\nAsterisk \\\"*\\\"\\n\\nModifier key judgments\\n\\n```js\\nhotkeys('*', function() {\\n  if (hotkeys.shift) {\\n    console.log('shift is pressed!');\\n  }\\n\\n  if (hotkeys.ctrl) {\\n    console.log('ctrl is pressed!');\\n  }\\n\\n  if (hotkeys.alt) {\\n    console.log('alt is pressed!');\\n  }\\n\\n  if (hotkeys.option) {\\n    console.log('option is pressed!');\\n  }\\n\\n  if (hotkeys.control) {\\n    console.log('control is pressed!');\\n  }\\n\\n  if (hotkeys.cmd) {\\n    console.log('cmd is pressed!');\\n  }\\n\\n  if (hotkeys.command) {\\n    console.log('command is pressed!');\\n  }\\n});\\n```\\n\\n### setScope\\n\\nUse the `hotkeys.setScope` method to set scope. There can only be one active scope besides 'all'.  By default 'all' is always active.\\n\\n```js\\n// Define shortcuts with a scope\\nhotkeys('ctrl+o, ctrl+alt+enter', 'issues', function() {\\n  console.log('do something');\\n});\\nhotkeys('o, enter', 'files', function() {\\n  console.log('do something else');\\n});\\n\\n// Set the scope (only 'all' and 'issues' shortcuts will be honored)\\nhotkeys.setScope('issues'); // default scope is 'all'\\n```\\n\\n### getScope\\n\\nUse the `hotkeys.getScope` method to get scope.\\n\\n```js\\nhotkeys.getScope();\\n```\\n\\n### deleteScope\\n\\nUse the `hotkeys.deleteScope` method to delete a scope. This will also remove all associated hotkeys with it.\\n\\n```js\\nhotkeys.deleteScope('issues');\\n```\\nYou can use second argument, if need set new scope after deleting.\\n\\n```js\\nhotkeys.deleteScope('issues', 'newScopeName');\\n```\\n\\n### unbind\\n\\nSimilar to defining shortcuts, they can be unbound using `hotkeys.unbind`.\\n\\n```js\\n// unbind 'a' handler\\nhotkeys.unbind('a');\\n\\n// Unbind a hotkeys only for a single scope\\n// If no scope is specified it defaults to the current scope (hotkeys.getScope())\\nhotkeys.unbind('o, enter', 'issues');\\nhotkeys.unbind('o, enter', 'files');\\n```\\n\\nUnbind events through functions.\\n\\n```js\\nfunction example() {\\n  hotkeys('a', example);\\n  hotkeys.unbind('a', example);\\n\\n  hotkeys('a', 'issues', example);\\n  hotkeys.unbind('a', 'issues', example);\\n}\\n```\\n\\nTo unbind everything.\\n\\n```js\\nhotkeys.unbind();\\n```\\n\\n### isPressed\\n\\nFor example, `hotkeys.isPressed(77)` is true if the `M` key is currently pressed.\\n\\n```js\\nhotkeys('a', function() {\\n  console.log(hotkeys.isPressed('a')); //=> true\\n  console.log(hotkeys.isPressed('A')); //=> true\\n  console.log(hotkeys.isPressed(65)); //=> true\\n});\\n```\\n\\n### trigger\\n\\ntrigger shortcut key event\\n\\n```js\\nhotkeys.trigger('ctrl+o');\\nhotkeys.trigger('ctrl+o', 'scope2');\\n```\\n\\n### getPressedKeyCodes\\n\\nReturns an array of key codes currently pressed.\\n\\n```js\\nhotkeys('command+ctrl+shift+a,f', function() {\\n  console.log(hotkeys.getPressedKeyCodes()); //=> [17, 65] or [70]\\n})\\n```\\n\\n### getPressedKeyString\\n\\nReturns an array of key codes currently pressed.\\n\\n```js\\nhotkeys('command+ctrl+shift+a,f', function() {\\n  console.log(hotkeys.getPressedKeyString()); //=> ['⌘', '⌃', '⇧', 'A', 'F']\\n})\\n```\\n\\n### getAllKeyCodes\\n\\nGet a list of all registration codes.\\n\\n```js\\nhotkeys('command+ctrl+shift+a,f', function() {\\n  console.log(hotkeys.getAllKeyCodes());\\n  // [\\n  //   { scope: 'all', shortcut: 'command+ctrl+shift+a', mods: [91, 17, 16], keys: [91, 17, 16, 65] },\\n  //   { scope: 'all', shortcut: 'f', mods: [], keys: [42] }\\n  // ]\\n})\\n```\\n\\n### filter\\n\\nBy default hotkeys are not enabled for `INPUT` `SELECT` `TEXTAREA` elements. `Hotkeys.filter` to return to the `true` shortcut keys set to play a role, `false` shortcut keys set up failure.\\n\\n```js\\nhotkeys.filter = function(event){\\n  return true;\\n}\\n//How to add the filter to edit labels. <div contentEditable=\\\"true\\\"></div>\\n//\\\"contentEditable\\\" Older browsers that do not support drops\\nhotkeys.filter = function(event) {\\n  var target = event.target || event.srcElement;\\n  var tagName = target.tagName;\\n  return !(target.isContentEditable || tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA');\\n}\\n\\nhotkeys.filter = function(event){\\n  var tagName = (event.target || event.srcElement).tagName;\\n  hotkeys.setScope(/^(INPUT|TEXTAREA|SELECT)$/.test(tagName) ? 'input' : 'other');\\n  return true;\\n}\\n```\\n\\n### noConflict\\n\\nRelinquish HotKeys’s control of the `hotkeys` variable.\\n\\n```js\\nvar k = hotkeys.noConflict();\\nk('a', function() {\\n  console.log(\\\"do something\\\")\\n});\\n\\nhotkeys()\\n// -->Uncaught TypeError: hotkeys is not a function(anonymous function)\\n// @ VM2170:2InjectedScript._evaluateOn\\n// @ VM2165:883InjectedScript._evaluateAndWrap\\n// @ VM2165:816InjectedScript.evaluate @ VM2165:682\\n```\\n\\n## Development\\n\\nTo develop, Install dependencies, Get the code:\\n\\n```shell\\n$ git https://github.com/jaywcjlove/hotkeys.git\\n$ cd hotkeys     # Into the directory\\n$ npm install    # or  yarn install\\n```\\n\\nTo develop, run the self-reloading build:\\n\\n```shell\\n$ npm run watch\\n```\\n\\nRun Document Website Environment.\\n\\n```shell\\n$ npm run doc\\n```\\n\\nTo contribute, please fork Hotkeys.js, add your patch and tests for it (in the `test/` folder) and submit a pull request.\\n\\n```shell\\n$ npm run test\\n$ npm run test:watch # Development model\\n```\\n\\n## Contributors\\n\\nAs always, thanks to our amazing contributors!\\n\\n<a href=\\\"https://github.com/jaywcjlove/hotkeys-js/graphs/contributors\\\">\\n  <img src=\\\"https://jaywcjlove.github.io/hotkeys-js/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\nMade with [github-action-contributors](https://github.com/jaywcjlove/github-action-contributors).\\n\\n## License\\n\\n[MIT © Kenny Wong](./LICENSE)\\n\";","/**! \n * hotkeys-js v3.13.15 \n * A simple micro-library for defining and dispatching keyboard shortcuts. It has no dependencies. \n * \n * Copyright (c) 2025 kenny wong <wowohoo@qq.com> \n * https://github.com/jaywcjlove/hotkeys-js.git \n * \n * @website: https://jaywcjlove.github.io/hotkeys-js\n \n * Licensed under the MIT license \n */\n\nconst isff = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase().indexOf('firefox') > 0 : false;\n\n/** Bind event */\nfunction addEvent(object, event, method, useCapture) {\n  if (object.addEventListener) {\n    object.addEventListener(event, method, useCapture);\n  } else if (object.attachEvent) {\n    object.attachEvent(\"on\".concat(event), method);\n  }\n}\nfunction removeEvent(object, event, method, useCapture) {\n  if (object.removeEventListener) {\n    object.removeEventListener(event, method, useCapture);\n  } else if (object.detachEvent) {\n    object.detachEvent(\"on\".concat(event), method);\n  }\n}\n\n/** Convert modifier keys to their corresponding key codes */\nfunction getMods(modifier, key) {\n  const mods = key.slice(0, key.length - 1);\n  for (let i = 0; i < mods.length; i++) mods[i] = modifier[mods[i].toLowerCase()];\n  return mods;\n}\n\n/** Process the input key string and convert it to an array */\nfunction getKeys(key) {\n  if (typeof key !== 'string') key = '';\n  key = key.replace(/\\s/g, ''); // Match any whitespace character, including spaces, tabs, form feeds, etc.\n  const keys = key.split(','); // Allow multiple shortcuts separated by ','\n  let index = keys.lastIndexOf('');\n\n  // Shortcut may include ',' — special handling needed\n  for (; index >= 0;) {\n    keys[index - 1] += ',';\n    keys.splice(index, 1);\n    index = keys.lastIndexOf('');\n  }\n  return keys;\n}\n\n/** Compare arrays of modifier keys */\nfunction compareArray(a1, a2) {\n  const arr1 = a1.length >= a2.length ? a1 : a2;\n  const arr2 = a1.length >= a2.length ? a2 : a1;\n  let isIndex = true;\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr2.indexOf(arr1[i]) === -1) isIndex = false;\n  }\n  return isIndex;\n}\n\n// Special Keys\nconst _keyMap = {\n  backspace: 8,\n  '⌫': 8,\n  tab: 9,\n  clear: 12,\n  enter: 13,\n  '↩': 13,\n  return: 13,\n  esc: 27,\n  escape: 27,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  /// https://w3c.github.io/uievents/#events-keyboard-key-location\n  arrowup: 38,\n  arrowdown: 40,\n  arrowleft: 37,\n  arrowright: 39,\n  del: 46,\n  delete: 46,\n  ins: 45,\n  insert: 45,\n  home: 36,\n  end: 35,\n  pageup: 33,\n  pagedown: 34,\n  capslock: 20,\n  num_0: 96,\n  num_1: 97,\n  num_2: 98,\n  num_3: 99,\n  num_4: 100,\n  num_5: 101,\n  num_6: 102,\n  num_7: 103,\n  num_8: 104,\n  num_9: 105,\n  num_multiply: 106,\n  num_add: 107,\n  num_enter: 108,\n  num_subtract: 109,\n  num_decimal: 110,\n  num_divide: 111,\n  '⇪': 20,\n  ',': 188,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '-': isff ? 173 : 189,\n  '=': isff ? 61 : 187,\n  ';': isff ? 59 : 186,\n  '\\'': 222,\n  '{': 219,\n  '}': 221,\n  '[': 219,\n  ']': 221,\n  '\\\\': 220\n};\n\n// Modifier Keys\nconst _modifier = {\n  // shiftKey\n  '⇧': 16,\n  shift: 16,\n  // altKey\n  '⌥': 18,\n  alt: 18,\n  option: 18,\n  // ctrlKey\n  '⌃': 17,\n  ctrl: 17,\n  control: 17,\n  // metaKey\n  '⌘': 91,\n  cmd: 91,\n  meta: 91,\n  command: 91\n};\nconst modifierMap = {\n  16: 'shiftKey',\n  18: 'altKey',\n  17: 'ctrlKey',\n  91: 'metaKey',\n  shiftKey: 16,\n  ctrlKey: 17,\n  altKey: 18,\n  metaKey: 91\n};\nconst _mods = {\n  16: false,\n  18: false,\n  17: false,\n  91: false\n};\nconst _handlers = {};\n\n// F1~F12 special key\nfor (let k = 1; k < 20; k++) {\n  _keyMap[\"f\".concat(k)] = 111 + k;\n}\n\n/** Record the pressed keys */\nlet _downKeys = [];\n/** Whether the window has already listened to the focus event */\nlet winListendFocus = null;\n/** Default hotkey scope */\nlet _scope = 'all';\n/** Map to record elements with bound events */\nconst elementEventMap = new Map();\n\n/** Return key code */\nconst code = x => _keyMap[x.toLowerCase()] || _modifier[x.toLowerCase()] || x.toUpperCase().charCodeAt(0);\nconst getKey = x => Object.keys(_keyMap).find(k => _keyMap[k] === x);\nconst getModifier = x => Object.keys(_modifier).find(k => _modifier[k] === x);\n\n/** Set or get the current scope (defaults to 'all') */\nfunction setScope(scope) {\n  _scope = scope || 'all';\n}\n/** Get the current scope */\nfunction getScope() {\n  return _scope || 'all';\n}\n/** Get the key codes of the currently pressed keys */\nfunction getPressedKeyCodes() {\n  return _downKeys.slice(0);\n}\nfunction getPressedKeyString() {\n  return _downKeys.map(c => getKey(c) || getModifier(c) || String.fromCharCode(c));\n}\nfunction getAllKeyCodes() {\n  const result = [];\n  Object.keys(_handlers).forEach(k => {\n    _handlers[k].forEach(_ref => {\n      let {\n        key,\n        scope,\n        mods,\n        shortcut\n      } = _ref;\n      result.push({\n        scope,\n        shortcut,\n        mods,\n        keys: key.split('+').map(v => code(v))\n      });\n    });\n  });\n  return result;\n}\n\n/** hotkey is effective only when filter return true */\nfunction filter(event) {\n  const target = event.target || event.srcElement;\n  const {\n    tagName\n  } = target;\n  let flag = true;\n  const isInput = tagName === 'INPUT' && !['checkbox', 'radio', 'range', 'button', 'file', 'reset', 'submit', 'color'].includes(target.type);\n  // ignore: isContentEditable === 'true', <input> and <textarea> when readOnly state is false, <select>\n  if (target.isContentEditable || (isInput || tagName === 'TEXTAREA' || tagName === 'SELECT') && !target.readOnly) {\n    flag = false;\n  }\n  return flag;\n}\n\n/** Determine whether the pressed key matches a specific key, returns true or false */\nfunction isPressed(keyCode) {\n  if (typeof keyCode === 'string') {\n    keyCode = code(keyCode); // Convert to key code\n  }\n  return _downKeys.indexOf(keyCode) !== -1;\n}\n\n/** Loop through and delete all handlers with the specified scope */\nfunction deleteScope(scope, newScope) {\n  let handlers;\n  let i;\n\n  // If no scope is specified, get the current scope\n  if (!scope) scope = getScope();\n  for (const key in _handlers) {\n    if (Object.prototype.hasOwnProperty.call(_handlers, key)) {\n      handlers = _handlers[key];\n      for (i = 0; i < handlers.length;) {\n        if (handlers[i].scope === scope) {\n          const deleteItems = handlers.splice(i, 1);\n          deleteItems.forEach(_ref2 => {\n            let {\n              element\n            } = _ref2;\n            return removeKeyEvent(element);\n          });\n        } else {\n          i++;\n        }\n      }\n    }\n  }\n\n  // If the current scope has been deleted, reset the scope to 'all'\n  if (getScope() === scope) setScope(newScope || 'all');\n}\n\n/** Clear modifier keys */\nfunction clearModifier(event) {\n  let key = event.keyCode || event.which || event.charCode;\n  if (event.key && event.key.toLowerCase() === 'capslock') {\n    // Ensure that when capturing keystrokes in modern browsers,\n    // uppercase and lowercase letters (such as R and r) return the same key value.\n    // https://github.com/jaywcjlove/hotkeys-js/pull/514\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n    key = code(event.key);\n  }\n  const i = _downKeys.indexOf(key);\n\n  // Remove the pressed key from the list\n  if (i >= 0) {\n    _downKeys.splice(i, 1);\n  }\n  // Special handling for the command key: fix the issue where keyup only triggers once for command combos\n  if (event.key && event.key.toLowerCase() === 'meta') {\n    _downKeys.splice(0, _downKeys.length);\n  }\n\n  // Clear modifier keys: shiftKey, altKey, ctrlKey, (command || metaKey)\n  if (key === 93 || key === 224) key = 91;\n  if (key in _mods) {\n    _mods[key] = false;\n\n    // Reset the modifier key status to false\n    for (const k in _modifier) if (_modifier[k] === key) hotkeys[k] = false;\n  }\n}\nfunction unbind(keysInfo) {\n  // unbind(), unbind all keys\n  if (typeof keysInfo === 'undefined') {\n    Object.keys(_handlers).forEach(key => {\n      Array.isArray(_handlers[key]) && _handlers[key].forEach(info => eachUnbind(info));\n      delete _handlers[key];\n    });\n    removeKeyEvent(null);\n  } else if (Array.isArray(keysInfo)) {\n    // support like : unbind([{key: 'ctrl+a', scope: 's1'}, {key: 'ctrl-a', scope: 's2', splitKey: '-'}])\n    keysInfo.forEach(info => {\n      if (info.key) eachUnbind(info);\n    });\n  } else if (typeof keysInfo === 'object') {\n    // support like unbind({key: 'ctrl+a, ctrl+b', scope:'abc'})\n    if (keysInfo.key) eachUnbind(keysInfo);\n  } else if (typeof keysInfo === 'string') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    // support old method\n    // eslint-disable-line\n    let [scope, method] = args;\n    if (typeof scope === 'function') {\n      method = scope;\n      scope = '';\n    }\n    eachUnbind({\n      key: keysInfo,\n      scope,\n      method,\n      splitKey: '+'\n    });\n  }\n}\n\n/** Unbind hotkeys for a specific scope */\nconst eachUnbind = _ref3 => {\n  let {\n    key,\n    scope,\n    method,\n    splitKey = '+'\n  } = _ref3;\n  const multipleKeys = getKeys(key);\n  multipleKeys.forEach(originKey => {\n    const unbindKeys = originKey.split(splitKey);\n    const len = unbindKeys.length;\n    const lastKey = unbindKeys[len - 1];\n    const keyCode = lastKey === '*' ? '*' : code(lastKey);\n    if (!_handlers[keyCode]) return;\n    // If scope is not provided, get the current scope\n    if (!scope) scope = getScope();\n    const mods = len > 1 ? getMods(_modifier, unbindKeys) : [];\n    const unbindElements = [];\n    _handlers[keyCode] = _handlers[keyCode].filter(record => {\n      // Check if the method matches; if method is provided, must be equal to unbind\n      const isMatchingMethod = method ? record.method === method : true;\n      const isUnbind = isMatchingMethod && record.scope === scope && compareArray(record.mods, mods);\n      if (isUnbind) unbindElements.push(record.element);\n      return !isUnbind;\n    });\n    unbindElements.forEach(element => removeKeyEvent(element));\n  });\n};\n\n/** Handle the callback function for the corresponding hotkey */\nfunction eventHandler(event, handler, scope, element) {\n  if (handler.element !== element) {\n    return;\n  }\n  let modifiersMatch;\n\n  // Check if it is within the current scope\n  if (handler.scope === scope || handler.scope === 'all') {\n    // Check whether modifier keys match (returns true if they do)\n    modifiersMatch = handler.mods.length > 0;\n    for (const y in _mods) {\n      if (Object.prototype.hasOwnProperty.call(_mods, y)) {\n        if (!_mods[y] && handler.mods.indexOf(+y) > -1 || _mods[y] && handler.mods.indexOf(+y) === -1) {\n          modifiersMatch = false;\n        }\n      }\n    }\n\n    // Call the handler function; ignore if it's only a modifier key\n    if (handler.mods.length === 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91] || modifiersMatch || handler.shortcut === '*') {\n      handler.keys = [];\n      handler.keys = handler.keys.concat(_downKeys);\n      if (handler.method(event, handler) === false) {\n        if (event.preventDefault) event.preventDefault();else event.returnValue = false;\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.cancelBubble) event.cancelBubble = true;\n      }\n    }\n  }\n}\n\n/** Handle the keydown event */\nfunction dispatch(event, element) {\n  const asterisk = _handlers['*'];\n  let key = event.keyCode || event.which || event.charCode;\n  // Ensure that when capturing keystrokes in modern browsers,\n  // uppercase and lowercase letters (such as R and r) return the same key value.\n  // https://github.com/jaywcjlove/hotkeys-js/pull/514\n  // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n  // CapsLock key\n  // There's an issue where `keydown` and `keyup` events are not triggered after CapsLock is enabled to activate uppercase.\n  if (event.key && event.key.toLowerCase() === 'capslock') {\n    return;\n  }\n  // Form control filter: by default, shortcut keys are not triggered in form elements\n  if (!hotkeys.filter.call(this, event)) return;\n\n  // In Gecko (Firefox), the command key code is 224; unify it with WebKit (Chrome)\n  // In WebKit, left and right command keys have different codes\n  if (key === 93 || key === 224) key = 91;\n\n  /**\n   * Collect bound keys\n   * If an Input Method Editor is processing key input and the event is keydown, return 229.\n   * https://stackoverflow.com/questions/25043934/is-it-ok-to-ignore-keydown-events-with-keycode-229\n   * http://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n   */\n  if (_downKeys.indexOf(key) === -1 && key !== 229) _downKeys.push(key);\n  /**\n   * Jest test cases are required.\n   * ===============================\n   */\n  ['metaKey', 'ctrlKey', 'altKey', 'shiftKey'].forEach(keyName => {\n    const keyNum = modifierMap[keyName];\n    if (event[keyName] && _downKeys.indexOf(keyNum) === -1) {\n      _downKeys.push(keyNum);\n    } else if (!event[keyName] && _downKeys.indexOf(keyNum) > -1) {\n      _downKeys.splice(_downKeys.indexOf(keyNum), 1);\n    } else if (keyName === 'metaKey' && event[keyName]) {\n      // If the command key is pressed, clear all non-modifier keys except the current event key.\n      // This is because keyup for non-modifier keys will NEVER be triggered when command is pressed.\n      // This is a known browser limitation.\n      _downKeys = _downKeys.filter(k => k in modifierMap || k === key);\n    }\n  });\n  /**\n   * -------------------------------\n   */\n  if (key in _mods) {\n    _mods[key] = true;\n    // Register special modifier keys to the `hotkeys` object\n    for (const k in _modifier) {\n      if (Object.prototype.hasOwnProperty.call(_modifier, k)) {\n        const eventKey = modifierMap[_modifier[k]];\n        hotkeys[k] = event[eventKey];\n      }\n    }\n    if (!asterisk) return;\n  }\n\n  // Bind the modifier keys in modifierMap to the event\n  for (const e in _mods) {\n    if (Object.prototype.hasOwnProperty.call(_mods, e)) {\n      _mods[e] = event[modifierMap[e]];\n    }\n  }\n  /**\n   * https://github.com/jaywcjlove/hotkeys/pull/129\n   * This solves the issue in Firefox on Windows where hotkeys corresponding to special characters would not trigger.\n   * An example of this is ctrl+alt+m on a Swedish keyboard which is used to type μ.\n   * Browser support: https://caniuse.com/#feat=keyboardevent-getmodifierstate\n   */\n  if (event.getModifierState && !(event.altKey && !event.ctrlKey) && event.getModifierState('AltGraph')) {\n    if (_downKeys.indexOf(17) === -1) {\n      _downKeys.push(17);\n    }\n    if (_downKeys.indexOf(18) === -1) {\n      _downKeys.push(18);\n    }\n    _mods[17] = true;\n    _mods[18] = true;\n  }\n\n  // Get the current scope (defaults to 'all')\n  const scope = getScope();\n  // Handle any hotkeys registered as '*'\n  if (asterisk) {\n    for (let i = 0; i < asterisk.length; i++) {\n      if (asterisk[i].scope === scope && (event.type === 'keydown' && asterisk[i].keydown || event.type === 'keyup' && asterisk[i].keyup)) {\n        eventHandler(event, asterisk[i], scope, element);\n      }\n    }\n  }\n  // If the key is not registered, return\n  if (!(key in _handlers)) return;\n  const handlerKey = _handlers[key];\n  const keyLen = handlerKey.length;\n  for (let i = 0; i < keyLen; i++) {\n    if (event.type === 'keydown' && handlerKey[i].keydown || event.type === 'keyup' && handlerKey[i].keyup) {\n      if (handlerKey[i].key) {\n        const record = handlerKey[i];\n        const {\n          splitKey\n        } = record;\n        const keyShortcut = record.key.split(splitKey);\n        const _downKeysCurrent = []; // Store the current key codes\n        for (let a = 0; a < keyShortcut.length; a++) {\n          _downKeysCurrent.push(code(keyShortcut[a]));\n        }\n        if (_downKeysCurrent.sort().join('') === _downKeys.sort().join('')) {\n          // Match found, call the handler\n          eventHandler(event, record, scope, element);\n        }\n      }\n    }\n  }\n}\nfunction hotkeys(key, option, method) {\n  _downKeys = [];\n  /** List of hotkeys to handle */\n  const keys = getKeys(key);\n  let mods = [];\n  /** Default scope is 'all', meaning effective in all scopes */\n  let scope = 'all';\n  /** Element to which the hotkey events are bound */\n  let element = document;\n  let i = 0;\n  let keyup = false;\n  let keydown = true;\n  let splitKey = '+';\n  let capture = false;\n  /** Allow only a single callback */\n  let single = false;\n\n  // Determine if the second argument is a function (no options provided)\n  if (method === undefined && typeof option === 'function') {\n    method = option;\n  }\n\n  // Parse options object\n  if (Object.prototype.toString.call(option) === '[object Object]') {\n    if (option.scope) scope = option.scope; // Set scope\n    if (option.element) element = option.element; // Set binding element\n    if (option.keyup) keyup = option.keyup;\n    if (option.keydown !== undefined) keydown = option.keydown;\n    if (option.capture !== undefined) capture = option.capture;\n    if (typeof option.splitKey === 'string') splitKey = option.splitKey;\n    if (option.single === true) single = true;\n  }\n  if (typeof option === 'string') scope = option;\n\n  // If only one callback is allowed, unbind the existing one first\n  if (single) unbind(key, scope);\n\n  // Handle each hotkey\n  for (; i < keys.length; i++) {\n    key = keys[i].split(splitKey); // Split into individual keys\n    mods = [];\n\n    // If it's a combination, extract modifier keys\n    if (key.length > 1) mods = getMods(_modifier, key);\n\n    // Convert non-modifier key to key code\n    key = key[key.length - 1];\n    key = key === '*' ? '*' : code(key); // '*' means match all hotkeys\n\n    // Initialize handler array if this key has no handlers yet\n    if (!(key in _handlers)) _handlers[key] = [];\n    _handlers[key].push({\n      keyup,\n      keydown,\n      scope,\n      mods,\n      shortcut: keys[i],\n      method,\n      key: keys[i],\n      splitKey,\n      element\n    });\n  }\n  // Register hotkey event listeners on the global document\n  if (typeof element !== 'undefined' && window) {\n    if (!elementEventMap.has(element)) {\n      const keydownListener = function () {\n        let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.event;\n        return dispatch(event, element);\n      };\n      const keyupListenr = function () {\n        let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.event;\n        dispatch(event, element);\n        clearModifier(event);\n      };\n      elementEventMap.set(element, {\n        keydownListener,\n        keyupListenr,\n        capture\n      });\n      addEvent(element, 'keydown', keydownListener, capture);\n      addEvent(element, 'keyup', keyupListenr, capture);\n    }\n    // Register focus event listener once to clear pressed keys on window focus\n    if (!winListendFocus) {\n      const listener = () => {\n        _downKeys = [];\n      };\n      winListendFocus = {\n        listener,\n        capture\n      };\n      addEvent(window, 'focus', listener, capture);\n    }\n  }\n}\nfunction trigger(shortcut) {\n  let scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n  Object.keys(_handlers).forEach(key => {\n    const dataList = _handlers[key].filter(item => item.scope === scope && item.shortcut === shortcut);\n    dataList.forEach(data => {\n      if (data && data.method) {\n        data.method();\n      }\n    });\n  });\n}\n\n/** Clean up event listeners. After unbinding, check whether the element still has any hotkeys bound. If not, remove its event listeners. */\nfunction removeKeyEvent(element) {\n  const values = Object.values(_handlers).flat();\n  const findindex = values.findIndex(_ref4 => {\n    let {\n      element: el\n    } = _ref4;\n    return el === element;\n  });\n  if (findindex < 0) {\n    const {\n      keydownListener,\n      keyupListenr,\n      capture\n    } = elementEventMap.get(element) || {};\n    if (keydownListener && keyupListenr) {\n      removeEvent(element, 'keyup', keyupListenr, capture);\n      removeEvent(element, 'keydown', keydownListener, capture);\n      elementEventMap.delete(element);\n    }\n  }\n  if (values.length <= 0 || elementEventMap.size <= 0) {\n    // Remove all event listeners from all elements\n    const eventKeys = Object.keys(elementEventMap);\n    eventKeys.forEach(el => {\n      const {\n        keydownListener,\n        keyupListenr,\n        capture\n      } = elementEventMap.get(el) || {};\n      if (keydownListener && keyupListenr) {\n        removeEvent(el, 'keyup', keyupListenr, capture);\n        removeEvent(el, 'keydown', keydownListener, capture);\n        elementEventMap.delete(el);\n      }\n    });\n    // Clear the elementEventMap\n    elementEventMap.clear();\n    // Clear all handlers\n    Object.keys(_handlers).forEach(key => delete _handlers[key]);\n    // Remove the global window focus event listener\n    if (winListendFocus) {\n      const {\n        listener,\n        capture\n      } = winListendFocus;\n      removeEvent(window, 'focus', listener, capture);\n      winListendFocus = null;\n    }\n  }\n}\nconst _api = {\n  getPressedKeyString,\n  setScope,\n  getScope,\n  deleteScope,\n  getPressedKeyCodes,\n  getAllKeyCodes,\n  isPressed,\n  filter,\n  trigger,\n  unbind,\n  keyMap: _keyMap,\n  modifier: _modifier,\n  modifierMap\n};\nfor (const a in _api) {\n  if (Object.prototype.hasOwnProperty.call(_api, a)) {\n    hotkeys[a] = _api[a];\n  }\n}\nif (typeof window !== 'undefined') {\n  const _hotkeys = window.hotkeys;\n  hotkeys.noConflict = deep => {\n    if (deep && window.hotkeys === hotkeys) {\n      window.hotkeys = _hotkeys;\n    }\n    return hotkeys;\n  };\n  window.hotkeys = hotkeys;\n}\n\nexport { hotkeys as default };\n","import React, { useEffect, useState } from 'react';\nimport GithubCorner from '@uiw/react-github-corners';\nimport { Github } from '@uiw/react-shields';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport KeyBoard from '@uiw/react-mac-keyboard';\nimport '@wcj/dark-mode';\nimport Footer from './components/Footer';\nimport styles from './styles/index.module.less';\nimport DocumentStr from '../README.md';\nimport hotkeys from '..';\nimport pkg from '../package.json';\n\nexport default function AppRoot() {\n  const [keyCode, setKeyCode] = useState([]);\n  const [keyStr, setKeyStr] = useState([]);\n\n  useEffect(() => {\n    document.addEventListener('keyup', onKeyUpEvent);\n\n    function pkeys(keys, key) {\n      if (keys.indexOf(key) === -1) keys.push(key);\n      return keys;\n    }\n    function pkeysStr(keysStr, key) {\n      if (keysStr.indexOf(key) === -1) keysStr.push(key);\n      return keysStr;\n    }\n\n    hotkeys('*', (evn) => {\n      evn.preventDefault();\n      const keys = [];\n      const kStr = [];\n      if (hotkeys.shift) {\n        pkeys(keys, 16);\n        pkeysStr(kStr, 'shift');\n      }\n      if (hotkeys.ctrl) {\n        pkeys(keys, 17);\n        pkeysStr(kStr, 'ctrl');\n      }\n      if (hotkeys.alt) {\n        pkeys(keys, 18);\n        pkeysStr(kStr, 'alt');\n      }\n      if (hotkeys.control) {\n        pkeys(keys, 17);\n        pkeysStr(kStr, 'control');\n      }\n      if (hotkeys.command) {\n        pkeys(keys, 91);\n        pkeysStr(kStr, 'command');\n      }\n      kStr.push(evn.keyCode);\n      if (keys.indexOf(evn.keyCode) === -1) keys.push(evn.keyCode);\n\n      setKeyCode(keys);\n      setKeyStr(kStr);\n    });\n\n    return () => {\n      document.removeEventListener('keyup', onKeyUpEvent);\n    };\n  }, []);\n\n  let DocumentStrSource = DocumentStr;\n  if (DocumentStrSource) DocumentStrSource = DocumentStr.replace(/([\\s\\S]*)<!--dividing-->/, '');\n  const openVersionWebsite = (e) => {\n    if (e.target && e.target.value) {\n      window.location.href = e.target.value;\n    }\n  };\n\n  const onKeyUpEvent = () => {\n    setKeyCode([]);\n    setKeyStr([]);\n  };\n\n  const onKeyBoardMouseDown = (item) => {\n    if (item.keycode > -1) {\n      setKeyStr([item.keycode]);\n    }\n  };\n\n  const onKeyBoardMouseUp = () => setKeyStr([]);\n\n  return (\n    <div>\n      <div className={styles.tools}>\n        <select className={styles.version} onChange={openVersionWebsite}>\n          <option value=\"https://jaywcjlove.github.io/hotkeys-js\">\n            v\n            {pkg.version}\n          </option>\n          <option value=\"https://unpkg.com/hotkeys-js@3.4.3/doc/index.html\">v3.4.3</option>\n          <option value=\"https://unpkg.com/hotkeys-js@3.4.2/doc/index.html\">v3.4.2</option>\n          <option value=\"https://unpkg.com/hotkeys-js@2.0.10/doc/index.html\">v2.0.10</option>\n        </select>\n        <dark-mode permanent />\n      </div>\n      {keyStr.length > -1 && (\n        <div className={styles.keyCodeInfo}>\n          {keyStr.map((item) => <span key={`${item}`}>{item}</span>)}\n        </div>\n      )}\n      <GithubCorner href=\"https://github.com/jaywcjlove/hotkeys-js\" target=\"__blank\" />\n      <div className={styles.header}>\n        <div className={styles.title}>HotKeys.js</div>\n        <div className={styles.github}>\n          <a href=\"https://www.npmjs.com/package/hotkeys-js\">\n            <button type=\"button\">On NPM</button>\n          </a>\n          <a href=\"https://github.com/jaywcjlove/hotkeys-js/\">\n            <button type=\"button\">Fork on Github</button>\n          </a>\n          <a href=\"https://github.com/jaywcjlove/hotkeys-js/\">\n            <button type=\"button\">Doc on Github</button>\n          </a>\n          <a href=\"https://jaywcjlove.gitee.io/hotkeys/\">\n            <button type=\"button\">Doc on Gitee</button>\n          </a>\n        </div>\n        <div className={styles.info}>A robust Javascript library for capturing keyboard input and key combinations entered. It has no dependencies. Try to press your keyboard, The following button will highlight.</div>\n      </div>\n      <KeyBoard\n        style={{ top: -40 }}\n        onMouseDown={onKeyBoardMouseDown.bind(this)}\n        onMouseUp={onKeyBoardMouseUp}\n        keyCode={keyCode}\n      />\n      <MarkdownPreview style={{ maxWidth: 995, margin: '0 auto' }} source={DocumentStrSource} />\n      <Footer name=\"Kenny Wong\" href=\"http://jaywcjlove.github.io\" year=\"2015-present\">\n        <Github user=\"jaywcjlove\" repo=\"hotkeys-js\">\n          <Github.Social href=\"https://github.com/jaywcjlove/hotkeys-js\" type=\"forks\" />\n          <Github.Social href=\"https://github.com/jaywcjlove/hotkeys-js\" type=\"stars\" />\n          <Github.Social href=\"https://github.com/jaywcjlove/hotkeys-js\" type=\"watchers\" />\n          <Github.Social href=\"https://github.com/jaywcjlove/hotkeys-js\" type=\"followers\" />\n        </Github>\n      </Footer>\n    </div>\n  );\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './styles/reset.less';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(<App />);\n","/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  if (typeof document === \"undefined\") return;\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","/**\n * @package @wcj/dark-mode\n * Web Component that toggles dark mode 🌒\n * Github: https://github.com/jaywcjlove/dark-mode.git\n * Website: https://jaywcjlove.github.io/dark-mode\n * \n * Licensed under the MIT license.\n * @license Copyright © 2022. Licensed under the MIT License\n * @author kenny wong <wowohoo@qq.com>\n */\nconst t=document;const e=\"_dark_mode_theme_\";const s=\"permanent\";const o=\"colorschemechange\";const i=\"permanentcolorscheme\";const h=\"light\";const r=\"dark\";const n=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){const t=this.getAttribute(e);return t===null?\"\":t},set(t){this.setAttribute(e,t)}})};const c=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){return this.hasAttribute(e)},set(t){if(t){this.setAttribute(e,\"\")}else{this.removeAttribute(e)}}})};class a extends HTMLElement{static get observedAttributes(){return[\"mode\",h,r,s]}LOCAL_NANE=e;constructor(){super();this.t()}connectedCallback(){n(this,\"mode\");n(this,r);n(this,h);c(this,s);const a=localStorage.getItem(e);if(a&&[h,r].includes(a)){this.mode=a;this.permanent=true}if(this.permanent&&!a){localStorage.setItem(e,this.mode)}const l=[h,r].includes(a);if(this.permanent&&a){this.o()}else{if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: dark)\").matches){this.mode=r;this.o()}if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: light)\").matches){this.mode=h;this.o()}}if(!this.permanent&&!l){window.matchMedia(\"(prefers-color-scheme: light)\").onchange=t=>{this.mode=t.matches?h:r;this.o()};window.matchMedia(\"(prefers-color-scheme: dark)\").onchange=t=>{this.mode=t.matches?r:h;this.o()}}const d=new MutationObserver(((s,h)=>{this.mode=t.documentElement.dataset.colorMode;if(this.permanent&&l){localStorage.setItem(e,this.mode);this.i(i,{permanent:this.permanent})}this.h();this.i(o,{colorScheme:this.mode})}));d.observe(t.documentElement,{attributes:true});this.i(o,{colorScheme:this.mode});this.h()}attributeChangedCallback(t,s,o){if(t===\"mode\"&&s!==o&&[h,r].includes(o)){const t=localStorage.getItem(e);if(this.mode===t){this.mode=o;this.h();this.o()}else if(this.mode&&this.mode!==t){this.h();this.o()}}else if((t===h||t===r)&&s!==o){this.h()}if(t===\"permanent\"&&typeof this.permanent===\"boolean\"){this.permanent?localStorage.setItem(e,this.mode):localStorage.removeItem(e)}}o(){t.documentElement.setAttribute(\"data-color-mode\",this.mode)}h(){this.icon.textContent=this.mode===h?\"🌒\":\"🌞\";this.text.textContent=this.mode===h?this.getAttribute(r):this.getAttribute(h);if(!this.text.textContent&&this.text.parentElement&&this.text){this.text.parentElement.removeChild(this.text)}}t(){var s=this.attachShadow({mode:\"open\"});this.label=t.createElement(\"span\");this.label.setAttribute(\"class\",\"wrapper\");this.label.onclick=()=>{this.mode=this.mode===h?r:h;if(this.permanent){localStorage.setItem(e,this.mode)}this.o();this.h()};s.appendChild(this.label);this.icon=t.createElement(\"span\");this.label.appendChild(this.icon);this.text=t.createElement(\"span\");this.label.appendChild(this.text);const o=`\\n[data-color-mode*='dark'], [data-color-mode*='dark'] body {\\n  color-scheme: dark;\\n  --color-theme-bg: #0d1117;\\n  --color-theme-text: #c9d1d9;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}\\n\\n[data-color-mode*='light'], [data-color-mode*='light'] body {\\n  color-scheme: light;\\n  --color-theme-bg: #fff;\\n  --color-theme-text: #24292f;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}`;const i=\"_dark_mode_style_\";const n=t.getElementById(i);if(!n){var c=t.createElement(\"style\");c.id=i;c.textContent=o;t.head.appendChild(c)}var a=t.createElement(\"style\");a.textContent=`\\n    .wrapper { cursor: pointer; user-select: none; position: relative; }\\n    .wrapper > span + span { margin-left: .4rem; }\\n    `;s.appendChild(a)}i(t,e){this.dispatchEvent(new CustomEvent(t,{bubbles:true,composed:true,detail:e}))}}customElements.define(\"dark-mode\",a);","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","import type { Declaration } from 'inline-style-parser';\nimport parse from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhotkeys_js\"] = self[\"webpackChunkhotkeys_js\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [670,411], () => (__webpack_require__(1242)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","includes","GITHUB_CORNERS_TEMPLATE","document","createElement","innerHTML","GithubCorners","HTMLElement","observedAttributes","constructor","super","right","this","shadow","attachShadow","mode","appendChild","ownerDocument","importNode","content","update","setAttr","name","value","svg","querySelector","test","toLocaleLowerCase","lastElementChild","setAttribute","firstElementChild","style","getAttributeNames","forEach","getAttribute","attributeChangedCallback","oldValue","newValue","customElements","define","_excluded","githubCorners","props","size","fixed","bottom","zIndex","bgColor","color","position","otherProps","styl","left","transform","top","_jsx","target","width","height","href","fill","Container","React","toArray","children","map","child","displayName","Internal","ref","anchor","imgSrc","other","alt","src","Issues","type","platform","base","property","user","repo","label","join","Size","path","License","Downloads","tag","total","getUrl","baseData","Activity","interval","variant","version","branch","typePath","Analysis","query","Social","Github","Version","Coverages","Codacy","projectId","Coverage","scope","packageName","dependency","dependencyScope","registryUri","url","push","concat","format","Npm","convert","undefined","ok","castFactory","Array","isArray","tests","checks","index","any","_len","parameters","_key","anyFactory","check","checkAsRecord","all","node","nodeAsRecord","key","propsFactory","typeFactory","Error","testFunction","parent","Boolean","looksLikeANode","empty","CONTINUE","EXIT","SKIP","visitParents","tree","visitor","reverse","is","step","factory","parents","tagName","defineProperty","visit","subresult","offset","grandparents","result","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","indexOf","toString","one","own","filter","options","cascadeRaw","cascade","preorder","parentNode","childIndex","next","c","i","o","registered","defaultLanguage","l","s","p","f","data","meta","properties","metastring","className","m","h","d","u","done","slice","toLowerCase","g","v","split","highlight","ignoreMissing","message","reduce","match","start","line","column","end","a","entries","prototype","y","b","trim","exec","w","lines","Number","groups","N","j","x","showLineNumbers","some","substring","O","pop","emptyMulticharIndex","emptyRegularIndex","extendIndex","item","currentIndex","pos","isLast","char","charAt","charIndex","chars","self","createMulticharIndex","items","_i","items_1","createRegularIndex","items_2","emptyPseudoSignatures","defaultPseudoSignature","optional","calculatePseudoSignature","types","setResultType","types_1","ofSelector","calculatePseudoSignatures","definitions","pseudoClassesToArgumentTypes","obj","_a","keys","category","_b","_c","inverseCategories","pseudoClass","argumentTypes","__assign","emptyXmlOptions","defaultXmlOptions","wildcard","withPositive","positive","merge","extension","mergeSection","values","mergeSchema","replaceValueIfSpecified","concatArray","mergeDefinitions","baseValue","migration","extendSyntaxDefinition","withNoNegative","baseSyntax","ids","classNames","namespace","combinators","attributes","operators","caseSensitivityModifiers","unknownCaseSensitivityModifiers","pseudoClasses","unknown","pseudoElements","notation","NoArgument","css1SyntaxDefinition","css2SyntaxDefinition","String","selectors3SyntaxDefinition","Formula","Selector","selectors4SyntaxDefinition","FormulaOfSelector","cssSyntaxDefinitions","css1","css2","css3","latest","progressive","isIdentStart","isIdent","isHex","whitespaceChars","quoteChars","digitsChars","errorPrefix","astMethods","generatorName","checkerName","entity","cssSelectorParse","syntax","substitutes","strict","syntaxDefinition","param","tagNameEnabled","tagNameWildcardEnabled","idEnabled","classNamesEnabled","namespaceEnabled","namespaceWildcardEnabled","substitutesEnabled","combinatorsIndex","_d","attributesEnabled","attributesOperatorsIndex","attributesCaseSensitivityModifiers","attributesAcceptUnknownCaseSensitivityModifiers","attributesCaseSensitivityModifiersEnabled","_e","pseudoClassesEnabled","pseudoClassesDefinitions","pseudoClassesAcceptUnknown","_f","pseudoElementsEnabled","pseudoElementsSingleColonNotationEnabled","pseudoElementsDoubleColonNotationEnabled","pseudoElementsDefinitions","pseudoElementsAcceptUnknown","str","chr","comparison","isTagStart","rewind","newPos","readAndNext","current","fail","errorMessage","Math","min","error","assert","condition","assertNonEof","isEof","pass","character","matchMulticharIndex","matchMulticharIndexPos","subPos","subMatch","parseHex","hex","count","skipSingleWhitespace","fromCharCode","parseInt","parseString","quote","parseIdentifier","parsePseudoClassString","skipWhitespace","parseSelector","relative","rules","parseRule","parseAttribute","attr","name_1","name_2","identifier","savedPos","name_3","operator","name_4","caseSensitivityModifier","parseNumber","isNumberStart","parsePseudoArgument","pseudoName","signature","argument","name_5","ident","firstNumber","firstNumberMultiplier","sign","parseFormula","selector","parseTagName","name_6","parseTagNameWithNamespace","rule","combinator","idName","isDoubleColon","pseudoElement","nestedRule","input","createParser","parse","TypeError","rtlRange","ltrRange","rtl","RegExp","ltr","directionBidi","source","direction","directionProperty","dir","attribute","element","schema","info","find","commaSeparated","commas","spaces","normalizeValue","emptyClassNames","id","_typeof","Symbol","iterator","toPropertyKey","toPrimitive","_defineProperty","enumerable","configurable","writable","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread2","getOwnPropertyDescriptors","defineProperties","tags","ranges","cast","matches","rightIndex","range","leftIndex","extendedFilter","lastIndexOf","hasProperty","re","whitespace","thing","replace","Set","ZERO","charCodeAt","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","compile","idx","readSign","number","readNumber","has","zwitch","settings","fn","invalid","handlers","fauxEsmNthCheck","pseudo","_","blank","someChildren","checked","_1","_2","_3","state","disabled","enabled","assertDeep","elementIndex","typeIndex","childState","_objectSpread","found","results","rootQuery","scopeElements","shallow","walk","lang","language","elementCount","typeCount","not","cachedFunction","getCachedNthCheck","required","readWrite","root","space","query_","_cachedFn","editableOrEditingHost","add","nest","field","list","combine","counts","toUpperCase","get","set","currentRules","nestResult","adjacentSibling","descendant","directChild","generalSibling","exit","currentDirection","directionInferred","xmlLang","contentEditable","enterState","rootRules","selectorIndex","applySelectors","fromParent","fromSibling","Map","before","createState","html","getCodeString","code","rewrite","selected","selectAll","nextChild","codeBlockParames","getCommentObject","_ref","getURLParameters","keyName","isNaN","propertiesHandle","defaultAttrs","attrs","JSON","stringify","rehyp","firstChild","prevChild","env","globalThis","deserialize","serialized","deserializer","$","as","out","unpair","arr","object","Date","flags","BigInt","EMPTY","typeOf","asString","shouldSkip","TYPE","serialize","json","lossy","serializer","pair","entry","valueOf","toJSON","toISOString","structuredClone","search","createH","defaultTagName","caseSensitive","adjust","createAdjustMap","unshift","previous","lastIndex","subvalue","record","isChild","addProperty","addChild","spaceSeparated","commaOrSpaceSeparated","parsePrimitive","finalResult","nodes","boolean","overloadedBoolean","normalize","from","cr","lf","webNamespaces","mathml","xlink","xml","xmlns","proto","nodeName","reference","patch","quirksMode","childNodes","file","location","loc","indices","toOffset","point","eol","toPoint","namespaceURI","prefix","sourceCodeLocation","startTag","endTag","to","createLocation","tail","verbose","opening","closing","startLine","startCol","startOffset","endLine","endCol","endOffset","emptyOptions","parentSchema","currentSchema","prop","createProperty","fragment","text","comment","doctype","publicId","systemId","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","handler","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","cpOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","token","attrName","Uint16Array","decodeMap","fromCodePoint","codePoint","output","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","startIdx","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","DIGIT_0","DIGIT_9","isAsciiDigit","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","entityDecoder","_flushCodePointConsumedAsCharacterReference","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","getErrorForNumericCharacterReference","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","_createAttr","attrNameFirstCh","_leaveAttrName","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","_isCharacterReferenceInAttribute","Legacy","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","tn","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","createTextNode","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","ns","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","rawTextStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","pointEnd","pointStart","gfmTagfilterExpression","knownMdxNames","parseOptions","raw","head","documentMode","handleRaw","handle","stitches","resetTokenizer","fromParse5","stitch","toParse5","Token","createParse5Location","clone","cloneWithoutChildren","fakeRoot","setPoint","tagfilter","node_","passThrough","extra","charRefCode","rehypeRaw","nameRe","nameReJsx","jsx","hastToReact","classId","dataType","itemId","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlnsXLink","StyleToObject","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","place","ancestors","cause","ruleId","fatal","stack","actual","expected","note","emptyMap","cap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","findComponentFromName","alignValue","createElementProps","createChildren","addNode","addChildren","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","countsByName","styleObject","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","isIdentifierName","computed","toDash","$1","$0","urlAttributes","action","cite","formAction","icon","manifest","ping","poster","includeImageAlt","includeHtml","chunkStart","SpliceBuffer","initial","RangeError","setCursor","stop","POSITIVE_INFINITY","deleteCount","trunc","removed","chunkedPush","pushMany","unshiftMany","subtokenize","eventsArray","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","context","startPosition","startPositions","childEvents","gaps","stream","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","combineExtensions","extensions","syntaxExtension","hook","constructs","existing","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","factorySpace","effects","limit","enter","consume","tokenize","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","nok","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","kind","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","open","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","definition","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","contentBefore","beforeContentChunk","contentChunk","characterReference","numeric","decodeNamedCharacterReference","characterEscape","lineEnding","called","labelEnd","newEvents","close","media","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","resolveText","createTokenizer","initialize","columnStart","resolveAllConstructs","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","decodeNumericCharacterReference","characterEscapeOrReference","decode","$2","fromMarkdown","encoding","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","title","depth","setextHeadingSlurpLineEnding","atHardBreak","inReference","referenceType","ancestor","decodeString","characterReferenceType","ordered","spread","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","TextDecoder","ceil","preprocess","combined","remarkParse","doc","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","blockquote","wrap","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","ariaDescribedBy","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","rows","firstRow","tableContent","tableCell","tableRow","align","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","footnoteById","defaultHandlers","trimMarkdownSpaceStart","propertyIsEnumerable","_objectWithoutProperties","unknownHandler","defaultUnknownHandler","hName","hChildren","hProperties","toHast","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","remarkRehype","destination","async","hastTree","run","bail","isPlainObject","getPrototypeOf","toStringTag","trough","fns","pipeline","middlewareIndex","callback","_len2","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","then","_len4","_key4","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","part","CallableInstance","setPrototypeOf","Processor","Compiler","attachers","freezeIndex","frozen","transformers","copy","attacher","extend","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","primary","rest","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","hasOwn","mdastTree","colon","questionMark","numberSign","ccount","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","unsafe","checkQuote","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","checkEmphasis","betweenHead","betweenTail","attentionEncodeSurroundingInfo","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","sizes","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","alertRegex","alertLegacyRegex","remarkAlert","legacyTitle","alertType","isNext","firstNode","reg","toLocaleUpperCase","itemChild","class","getAlertIcon","_pathData$type","viewBox","ariaHidden","pathData","tip","important","warning","caution","getParentElement","dom","dataset","classList","parentElement","useCopied","container","copyTextToClipboard","setTimeout","useEffect","_container$current","_container$current2","removeEventListener","addEventListener","_container$current3","prefixCls","disableCopy","onScroll","onMouseOver","pluginsFilter","wrapperElement","warpperElement","mdp","useImperativeHandle","cls","customProps","wrapperProps","ReactMarkdown","reservedMeta","retrieveMeta","metaString","headingRank","slugs","occurrences","reset","slug","maintainCase","originalSlug","convertElement","tagNameFactory","looksLikeAnElement","contentDefaults","toChildren","toNode","toProperties","openDelimiter","closeDelimiter","octiconLink","fillRule","defaultRehypePlugins","headingOroperties","headingProperties","behavior","method","grouping","tabIndex","rehypeIgnore","_props$disableCopy","rehypeRewrite","rehypeAttrs","rehypePrism","MarkdownPreview","keyCodeData","keycode","MacKeyBoard","keyCode","onMouseDown","_onMouseDown","onMouseUp","_onMouseUp","_item","_idx","Footer","year","_jsxs","rel","isff","navigator","userAgent","addEvent","useCapture","attachEvent","removeEvent","detachEvent","getMods","modifier","mods","getKeys","_keyMap","backspace","tab","clear","return","esc","up","down","arrowup","arrowdown","arrowleft","arrowright","del","ins","insert","home","pageup","pagedown","capslock","num_0","num_1","num_2","num_3","num_4","num_5","num_6","num_7","num_8","num_9","num_multiply","num_add","num_enter","num_subtract","num_decimal","num_divide","_modifier","option","ctrl","control","cmd","command","modifierMap","shiftKey","ctrlKey","altKey","metaKey","_mods","_handlers","k","_downKeys","winListendFocus","_scope","elementEventMap","setScope","getScope","unbind","keysInfo","eachUnbind","removeKeyEvent","args","splitKey","_ref3","originKey","unbindKeys","lastKey","unbindElements","isUnbind","a1","a2","arr1","arr2","isIndex","compareArray","eventHandler","modifiersMatch","shortcut","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","asterisk","which","charCode","hotkeys","keyNum","eventKey","getModifierState","keydown","keyup","handlerKey","keyLen","keyShortcut","_downKeysCurrent","capture","window","keydownListener","keyupListenr","clearModifier","listener","flat","_ref4","el","_api","getPressedKeyString","getKey","getModifier","deleteScope","newScope","_ref2","getPressedKeyCodes","getAllKeyCodes","isPressed","srcElement","flag","isInput","isContentEditable","readOnly","trigger","keyMap","_hotkeys","noConflict","deep","AppRoot","setKeyCode","useState","keyStr","setKeyStr","pkeys","pkeysStr","keysStr","onKeyUpEvent","evn","kStr","DocumentStrSource","DocumentStr","styles","onChange","pkg","permanent","GithubCorner","KeyBoard","onKeyBoardMouseUp","maxWidth","margin","getElementById","createRoot","render","App","cb","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","removeChild","removeAllRanges","addRange","connectedCallback","hasAttribute","removeAttribute","localStorage","getItem","setItem","matchMedia","onchange","MutationObserver","documentElement","colorMode","colorScheme","observe","removeItem","textContent","onclick","dispatchEvent","CustomEvent","bubbles","composed","detail","module","exports","trueFunc","falseFunc","toStr","gOPD","hasOwnConstructor","hasIsPrototypeOf","setProperty","getProperty","copyIsArray","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","filename","silent","comments","val","decl","decls","declarations","parsePart","res","lhs","rhs","incr","C","sortIndex","performance","unstable_now","q","z","D","E","clearTimeout","F","setImmediate","G","startTime","expirationTime","H","J","K","L","M","priorityLevel","scheduling","isInputPending","Q","R","MessageChannel","T","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","console","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","inline_style_parser_1","default","hasIterator","__importDefault","require","__esModule","tokens","padRight","padLeft","buttonTypes","isProperties","core","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","additional","queue","following","characterReferenceCharacters","characters","terminated","namedReference","diff","nonTerminated","referenceCode","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","DefinedInfo","mustUseProperty","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","charSet","cols","colSpan","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemProp","itemRef","itemScope","itemType","loading","loop","low","maxLength","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","preload","referrerPolicy","reversed","rowSpan","sandbox","scoped","seamless","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","slot","span","spellCheck","srcDoc","srcLang","srcSet","translate","typeMustMatch","useMap","writingSuggestions","aLink","archive","axis","background","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dominantBaseline","enableBackground","fillOpacity","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","valid","dash","Type","Info","camelcase","dashes","kebab","mark","powers","increment","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","getter","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}